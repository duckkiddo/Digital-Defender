/*!*************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[3]!./app/globals.css ***!
  \*************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */

@layer properties;

@layer theme, base, components, utilities;

@layer theme {

  :root, :host {

    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;

    --color-red-50: oklch(97.1% 0.013 17.38);

    --color-red-300: oklch(80.8% 0.114 19.571);

    --color-red-400: oklch(70.4% 0.191 22.216);

    --color-red-500: oklch(63.7% 0.237 25.331);

    --color-red-600: oklch(57.7% 0.245 27.325);

    --color-orange-400: oklch(75% 0.183 55.934);

    --color-orange-500: oklch(70.5% 0.213 47.604);

    --color-amber-400: oklch(82.8% 0.189 84.429);

    --color-amber-500: oklch(76.9% 0.188 70.08);

    --color-yellow-400: oklch(85.2% 0.199 91.936);

    --color-yellow-500: oklch(79.5% 0.184 86.047);

    --color-green-400: oklch(79.2% 0.209 151.711);

    --color-green-500: oklch(72.3% 0.219 149.579);

    --color-blue-50: oklch(97% 0.014 254.604);

    --color-blue-300: oklch(80.9% 0.105 251.813);

    --color-blue-400: oklch(70.7% 0.165 254.624);

    --color-blue-500: oklch(62.3% 0.214 259.815);

    --color-indigo-100: oklch(93% 0.034 272.788);

    --color-indigo-600: oklch(51.1% 0.262 276.966);

    --color-purple-400: oklch(71.4% 0.203 305.504);

    --color-purple-500: oklch(62.7% 0.265 303.9);

    --color-purple-600: oklch(55.8% 0.288 302.321);

    --color-pink-400: oklch(71.8% 0.202 349.761);

    --color-pink-500: oklch(65.6% 0.241 354.308);

    --color-gray-800: oklch(27.8% 0.033 256.848);

    --color-gray-900: oklch(21% 0.034 264.665);

    --color-neutral-900: oklch(20.5% 0 0);

    --color-black: #000;

    --color-white: #fff;

    --spacing: 0.25rem;

    --container-xs: 20rem;

    --container-sm: 24rem;

    --container-md: 28rem;

    --container-lg: 32rem;

    --container-2xl: 42rem;

    --container-3xl: 48rem;

    --container-4xl: 56rem;

    --container-5xl: 64rem;

    --container-6xl: 72rem;

    --text-xs: 0.75rem;

    --text-xs--line-height: calc(1 / 0.75);

    --text-sm: 0.875rem;

    --text-sm--line-height: calc(1.25 / 0.875);

    --text-base: 1rem;

    --text-base--line-height: calc(1.5 / 1);

    --text-lg: 1.125rem;

    --text-lg--line-height: calc(1.75 / 1.125);

    --text-xl: 1.25rem;

    --text-xl--line-height: calc(1.75 / 1.25);

    --text-2xl: 1.5rem;

    --text-2xl--line-height: calc(2 / 1.5);

    --text-3xl: 1.875rem;

    --text-3xl--line-height: calc(2.25 / 1.875);

    --text-4xl: 2.25rem;

    --text-4xl--line-height: calc(2.5 / 2.25);

    --text-5xl: 3rem;

    --text-5xl--line-height: 1;

    --text-6xl: 3.75rem;

    --text-6xl--line-height: 1;

    --text-8xl: 6rem;

    --text-8xl--line-height: 1;

    --font-weight-normal: 400;

    --font-weight-medium: 500;

    --font-weight-semibold: 600;

    --font-weight-bold: 700;

    --font-weight-extrabold: 800;

    --tracking-tight: -0.025em;

    --tracking-widest: 0.1em;

    --leading-snug: 1.375;

    --leading-relaxed: 1.625;

    --radius-xs: 0.125rem;

    --radius-2xl: 1rem;

    --radius-3xl: 1.5rem;

    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);

    --animate-spin: spin 1s linear infinite;

    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;

    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;

    --blur-sm: 8px;

    --blur-lg: 16px;

    --aspect-video: 16 / 9;

    --default-transition-duration: 150ms;

    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    --default-font-family: var(--font-sans);

    --default-mono-font-family: var(--font-mono);

    --color-primary: var(--primary);

    --color-primary-foreground: var(--primary-foreground);

    --color-success: var(--success);

    --color-warning: var(--warning);

    --color-border: var(--border);
  }
}

@layer base {

  *, ::after, ::before, ::backdrop, ::file-selector-button {

    box-sizing: border-box;

    margin: 0;

    padding: 0;

    border: 0 solid;
  }

  html, :host {

    line-height: 1.5;

    -webkit-text-size-adjust: 100%;

    -moz-tab-size: 4;

      -o-tab-size: 4;

         tab-size: 4;

    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");

    font-feature-settings: normal;

    font-feature-settings: var(--default-font-feature-settings, normal);

    font-variation-settings: normal;

    font-variation-settings: var(--default-font-variation-settings, normal);

    -webkit-tap-highlight-color: transparent;
  }

  hr {

    height: 0;

    color: inherit;

    border-top-width: 1px;
  }

  abbr:where([title]) {

    -webkit-text-decoration: underline dotted;

    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {

    font-size: inherit;

    font-weight: inherit;
  }

  a {

    color: inherit;

    -webkit-text-decoration: inherit;

    text-decoration: inherit;
  }

  b, strong {

    font-weight: bolder;
  }

  code, kbd, samp, pre {

    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;

    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);

    font-feature-settings: normal;

    font-feature-settings: var(--default-mono-font-feature-settings, normal);

    font-variation-settings: normal;

    font-variation-settings: var(--default-mono-font-variation-settings, normal);

    font-size: 1em;
  }

  small {

    font-size: 80%;
  }

  sub, sup {

    font-size: 75%;

    line-height: 0;

    position: relative;

    vertical-align: baseline;
  }

  sub {

    bottom: -0.25em;
  }

  sup {

    top: -0.5em;
  }

  table {

    text-indent: 0;

    border-color: inherit;

    border-collapse: collapse;
  }

  :-moz-focusring {

    outline: auto;
  }

  progress {

    vertical-align: baseline;
  }

  summary {

    display: list-item;
  }

  ol, ul, menu {

    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {

    display: block;

    vertical-align: middle;
  }

  img, video {

    max-width: 100%;

    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {

    font: inherit;

    font-feature-settings: inherit;

    font-variation-settings: inherit;

    letter-spacing: inherit;

    color: inherit;

    border-radius: 0;

    background-color: transparent;

    opacity: 1;
  }

  :where(select:is([multiple], [size])) optgroup {

    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {

    padding-inline-start: 20px;
  }

  ::file-selector-button {

    margin-inline-end: 4px;
  }

  ::-moz-placeholder {

    opacity: 1;
  }

  ::placeholder {

    opacity: 1;
  }

  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {

    ::-moz-placeholder {

      color: currentcolor;

      @supports (color: color-mix(in lab, red, red)) {

        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }

    ::placeholder {

      color: currentcolor;

      @supports (color: color-mix(in lab, red, red)) {

        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {

    resize: vertical;
  }

  ::-webkit-search-decoration {

    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {

    min-height: 1lh;

    text-align: inherit;
  }

  ::-webkit-datetime-edit {

    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {

    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {

    padding-block: 0;
  }

  ::-webkit-calendar-picker-indicator {

    line-height: 1;
  }

  :-moz-ui-invalid {

    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {

    -webkit-appearance: button;

       -moz-appearance: button;

            appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {

    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {

    display: none !important;
  }
}

@layer utilities {

  .\@container\/card-header {

    container-type: inline-size;

    container-name: card-header;
  }

  .pointer-events-auto {

    pointer-events: auto;
  }

  .pointer-events-none {

    pointer-events: none;
  }

  .invisible {

    visibility: hidden;
  }

  .visible {

    visibility: visible;
  }

  .sr-only {

    position: absolute;

    width: 1px;

    height: 1px;

    padding: 0;

    margin: -1px;

    overflow: hidden;

    clip: rect(0, 0, 0, 0);

    white-space: nowrap;

    border-width: 0;
  }

  .absolute {

    position: absolute;
  }

  .fixed {

    position: fixed;
  }

  .relative {

    position: relative;
  }

  .sticky {

    position: sticky;
  }

  .inset-0 {

    inset: calc(0.25rem * 0);

    inset: calc(var(--spacing) * 0);
  }

  .inset-x-0 {

    inset-inline: calc(0.25rem * 0);

    inset-inline: calc(var(--spacing) * 0);
  }

  .inset-y-0 {

    inset-block: calc(0.25rem * 0);

    inset-block: calc(var(--spacing) * 0);
  }

  .-top-1 {

    top: calc(0.25rem * -1);

    top: calc(var(--spacing) * -1);
  }

  .-top-3 {

    top: calc(0.25rem * -3);

    top: calc(var(--spacing) * -3);
  }

  .-top-12 {

    top: calc(0.25rem * -12);

    top: calc(var(--spacing) * -12);
  }

  .top-0 {

    top: calc(0.25rem * 0);

    top: calc(var(--spacing) * 0);
  }

  .top-1\.5 {

    top: calc(0.25rem * 1.5);

    top: calc(var(--spacing) * 1.5);
  }

  .top-1\/2 {

    top: calc(1/2 * 100%);
  }

  .top-2 {

    top: calc(0.25rem * 2);

    top: calc(var(--spacing) * 2);
  }

  .top-3 {

    top: calc(0.25rem * 3);

    top: calc(var(--spacing) * 3);
  }

  .top-3\.5 {

    top: calc(0.25rem * 3.5);

    top: calc(var(--spacing) * 3.5);
  }

  .top-4 {

    top: calc(0.25rem * 4);

    top: calc(var(--spacing) * 4);
  }

  .top-\[1px\] {

    top: 1px;
  }

  .top-\[50\%\] {

    top: 50%;
  }

  .top-\[60\%\] {

    top: 60%;
  }

  .top-full {

    top: 100%;
  }

  .-right-1 {

    right: calc(0.25rem * -1);

    right: calc(var(--spacing) * -1);
  }

  .-right-12 {

    right: calc(0.25rem * -12);

    right: calc(var(--spacing) * -12);
  }

  .right-0 {

    right: calc(0.25rem * 0);

    right: calc(var(--spacing) * 0);
  }

  .right-1 {

    right: calc(0.25rem * 1);

    right: calc(var(--spacing) * 1);
  }

  .right-2 {

    right: calc(0.25rem * 2);

    right: calc(var(--spacing) * 2);
  }

  .right-3 {

    right: calc(0.25rem * 3);

    right: calc(var(--spacing) * 3);
  }

  .right-4 {

    right: calc(0.25rem * 4);

    right: calc(var(--spacing) * 4);
  }

  .right-6 {

    right: calc(0.25rem * 6);

    right: calc(var(--spacing) * 6);
  }

  .-bottom-1 {

    bottom: calc(0.25rem * -1);

    bottom: calc(var(--spacing) * -1);
  }

  .-bottom-12 {

    bottom: calc(0.25rem * -12);

    bottom: calc(var(--spacing) * -12);
  }

  .bottom-0 {

    bottom: calc(0.25rem * 0);

    bottom: calc(var(--spacing) * 0);
  }

  .bottom-2 {

    bottom: calc(0.25rem * 2);

    bottom: calc(var(--spacing) * 2);
  }

  .bottom-4 {

    bottom: calc(0.25rem * 4);

    bottom: calc(var(--spacing) * 4);
  }

  .bottom-6 {

    bottom: calc(0.25rem * 6);

    bottom: calc(var(--spacing) * 6);
  }

  .-left-12 {

    left: calc(0.25rem * -12);

    left: calc(var(--spacing) * -12);
  }

  .left-0 {

    left: calc(0.25rem * 0);

    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {

    left: calc(1/2 * 100%);
  }

  .left-2 {

    left: calc(0.25rem * 2);

    left: calc(var(--spacing) * 2);
  }

  .left-3 {

    left: calc(0.25rem * 3);

    left: calc(var(--spacing) * 3);
  }

  .left-\[50\%\] {

    left: 50%;
  }

  .isolate {

    isolation: isolate;
  }

  .z-10 {

    z-index: 10;
  }

  .z-20 {

    z-index: 20;
  }

  .z-50 {

    z-index: 50;
  }

  .z-\[1\] {

    z-index: 1;
  }

  .z-\[100\] {

    z-index: 100;
  }

  .col-start-2 {

    grid-column-start: 2;
  }

  .row-span-2 {

    grid-row: span 2 / span 2;
  }

  .row-start-1 {

    grid-row-start: 1;
  }

  .container {

    width: 100%;

    @media (min-width: 40rem) {

      max-width: 40rem;
    }

    @media (min-width: 48rem) {

      max-width: 48rem;
    }

    @media (min-width: 64rem) {

      max-width: 64rem;
    }

    @media (min-width: 80rem) {

      max-width: 80rem;
    }

    @media (min-width: 96rem) {

      max-width: 96rem;
    }
  }

  .-mx-1 {

    margin-inline: calc(0.25rem * -1);

    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-2 {

    margin-inline: calc(0.25rem * 2);

    margin-inline: calc(var(--spacing) * 2);
  }

  .mx-3\.5 {

    margin-inline: calc(0.25rem * 3.5);

    margin-inline: calc(var(--spacing) * 3.5);
  }

  .mx-4 {

    margin-inline: calc(0.25rem * 4);

    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-auto {

    margin-inline: auto;
  }

  .my-0\.5 {

    margin-block: calc(0.25rem * 0.5);

    margin-block: calc(var(--spacing) * 0.5);
  }

  .my-1 {

    margin-block: calc(0.25rem * 1);

    margin-block: calc(var(--spacing) * 1);
  }

  .-mt-4 {

    margin-top: calc(0.25rem * -4);

    margin-top: calc(var(--spacing) * -4);
  }

  .mt-0\.5 {

    margin-top: calc(0.25rem * 0.5);

    margin-top: calc(var(--spacing) * 0.5);
  }

  .mt-1 {

    margin-top: calc(0.25rem * 1);

    margin-top: calc(var(--spacing) * 1);
  }

  .mt-1\.5 {

    margin-top: calc(0.25rem * 1.5);

    margin-top: calc(var(--spacing) * 1.5);
  }

  .mt-2 {

    margin-top: calc(0.25rem * 2);

    margin-top: calc(var(--spacing) * 2);
  }

  .mt-4 {

    margin-top: calc(0.25rem * 4);

    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {

    margin-top: calc(0.25rem * 6);

    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {

    margin-top: calc(0.25rem * 8);

    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {

    margin-top: calc(0.25rem * 12);

    margin-top: calc(var(--spacing) * 12);
  }

  .mt-auto {

    margin-top: auto;
  }

  .mr-1 {

    margin-right: calc(0.25rem * 1);

    margin-right: calc(var(--spacing) * 1);
  }

  .mr-2 {

    margin-right: calc(0.25rem * 2);

    margin-right: calc(var(--spacing) * 2);
  }

  .mb-1 {

    margin-bottom: calc(0.25rem * 1);

    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {

    margin-bottom: calc(0.25rem * 2);

    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {

    margin-bottom: calc(0.25rem * 3);

    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {

    margin-bottom: calc(0.25rem * 4);

    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {

    margin-bottom: calc(0.25rem * 6);

    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {

    margin-bottom: calc(0.25rem * 8);

    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {

    margin-bottom: calc(0.25rem * 12);

    margin-bottom: calc(var(--spacing) * 12);
  }

  .mb-16 {

    margin-bottom: calc(0.25rem * 16);

    margin-bottom: calc(var(--spacing) * 16);
  }

  .-ml-4 {

    margin-left: calc(0.25rem * -4);

    margin-left: calc(var(--spacing) * -4);
  }

  .ml-1 {

    margin-left: calc(0.25rem * 1);

    margin-left: calc(var(--spacing) * 1);
  }

  .ml-2 {

    margin-left: calc(0.25rem * 2);

    margin-left: calc(var(--spacing) * 2);
  }

  .ml-auto {

    margin-left: auto;
  }

  .line-clamp-1 {

    overflow: hidden;

    display: -webkit-box;

    -webkit-box-orient: vertical;

    -webkit-line-clamp: 1;
  }

  .block {

    display: block;
  }

  .flex {

    display: flex;
  }

  .grid {

    display: grid;
  }

  .hidden {

    display: none;
  }

  .inline-block {

    display: inline-block;
  }

  .inline-flex {

    display: inline-flex;
  }

  .table {

    display: table;
  }

  .table-caption {

    display: table-caption;
  }

  .table-cell {

    display: table-cell;
  }

  .table-row {

    display: table-row;
  }

  .field-sizing-content {

    field-sizing: content;
  }

  .aspect-square {

    aspect-ratio: 1 / 1;
  }

  .aspect-video {

    aspect-ratio: 16 / 9;

    aspect-ratio: var(--aspect-video);
  }

  .size-\(--cell-size\) {

    width: var(--cell-size);

    height: var(--cell-size);
  }

  .size-2 {

    width: calc(0.25rem * 2);

    width: calc(var(--spacing) * 2);

    height: calc(0.25rem * 2);

    height: calc(var(--spacing) * 2);
  }

  .size-2\.5 {

    width: calc(0.25rem * 2.5);

    width: calc(var(--spacing) * 2.5);

    height: calc(0.25rem * 2.5);

    height: calc(var(--spacing) * 2.5);
  }

  .size-3 {

    width: calc(0.25rem * 3);

    width: calc(var(--spacing) * 3);

    height: calc(0.25rem * 3);

    height: calc(var(--spacing) * 3);
  }

  .size-3\.5 {

    width: calc(0.25rem * 3.5);

    width: calc(var(--spacing) * 3.5);

    height: calc(0.25rem * 3.5);

    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {

    width: calc(0.25rem * 4);

    width: calc(var(--spacing) * 4);

    height: calc(0.25rem * 4);

    height: calc(var(--spacing) * 4);
  }

  .size-7 {

    width: calc(0.25rem * 7);

    width: calc(var(--spacing) * 7);

    height: calc(0.25rem * 7);

    height: calc(var(--spacing) * 7);
  }

  .size-8 {

    width: calc(0.25rem * 8);

    width: calc(var(--spacing) * 8);

    height: calc(0.25rem * 8);

    height: calc(var(--spacing) * 8);
  }

  .size-9 {

    width: calc(0.25rem * 9);

    width: calc(var(--spacing) * 9);

    height: calc(0.25rem * 9);

    height: calc(var(--spacing) * 9);
  }

  .size-auto {

    width: auto;

    height: auto;
  }

  .size-full {

    width: 100%;

    height: 100%;
  }

  .h-\(--cell-size\) {

    height: var(--cell-size);
  }

  .h-1 {

    height: calc(0.25rem * 1);

    height: calc(var(--spacing) * 1);
  }

  .h-1\.5 {

    height: calc(0.25rem * 1.5);

    height: calc(var(--spacing) * 1.5);
  }

  .h-2 {

    height: calc(0.25rem * 2);

    height: calc(var(--spacing) * 2);
  }

  .h-2\.5 {

    height: calc(0.25rem * 2.5);

    height: calc(var(--spacing) * 2.5);
  }

  .h-3 {

    height: calc(0.25rem * 3);

    height: calc(var(--spacing) * 3);
  }

  .h-3\.5 {

    height: calc(0.25rem * 3.5);

    height: calc(var(--spacing) * 3.5);
  }

  .h-4 {

    height: calc(0.25rem * 4);

    height: calc(var(--spacing) * 4);
  }

  .h-5 {

    height: calc(0.25rem * 5);

    height: calc(var(--spacing) * 5);
  }

  .h-6 {

    height: calc(0.25rem * 6);

    height: calc(var(--spacing) * 6);
  }

  .h-7 {

    height: calc(0.25rem * 7);

    height: calc(var(--spacing) * 7);
  }

  .h-8 {

    height: calc(0.25rem * 8);

    height: calc(var(--spacing) * 8);
  }

  .h-9 {

    height: calc(0.25rem * 9);

    height: calc(var(--spacing) * 9);
  }

  .h-10 {

    height: calc(0.25rem * 10);

    height: calc(var(--spacing) * 10);
  }

  .h-12 {

    height: calc(0.25rem * 12);

    height: calc(var(--spacing) * 12);
  }

  .h-16 {

    height: calc(0.25rem * 16);

    height: calc(var(--spacing) * 16);
  }

  .h-20 {

    height: calc(0.25rem * 20);

    height: calc(var(--spacing) * 20);
  }

  .h-24 {

    height: calc(0.25rem * 24);

    height: calc(var(--spacing) * 24);
  }

  .h-32 {

    height: calc(0.25rem * 32);

    height: calc(var(--spacing) * 32);
  }

  .h-48 {

    height: calc(0.25rem * 48);

    height: calc(var(--spacing) * 48);
  }

  .h-96 {

    height: calc(0.25rem * 96);

    height: calc(var(--spacing) * 96);
  }

  .h-\[1\.2rem\] {

    height: 1.2rem;
  }

  .h-\[1px\] {

    height: 1px;
  }

  .h-\[400px\] {

    height: 400px;
  }

  .h-\[500px\] {

    height: 500px;
  }

  .h-\[calc\(100\%-1px\)\] {

    height: calc(100% - 1px);
  }

  .h-\[var\(--radix-navigation-menu-viewport-height\)\] {

    height: var(--radix-navigation-menu-viewport-height);
  }

  .h-\[var\(--radix-select-trigger-height\)\] {

    height: var(--radix-select-trigger-height);
  }

  .h-auto {

    height: auto;
  }

  .h-full {

    height: 100%;
  }

  .h-px {

    height: 1px;
  }

  .h-svh {

    height: 100svh;
  }

  .max-h-\(--radix-context-menu-content-available-height\) {

    max-height: var(--radix-context-menu-content-available-height);
  }

  .max-h-\(--radix-dropdown-menu-content-available-height\) {

    max-height: var(--radix-dropdown-menu-content-available-height);
  }

  .max-h-96 {

    max-height: calc(0.25rem * 96);

    max-height: calc(var(--spacing) * 96);
  }

  .max-h-\[300px\] {

    max-height: 300px;
  }

  .max-h-screen {

    max-height: 100vh;
  }

  .min-h-0 {

    min-height: calc(0.25rem * 0);

    min-height: calc(var(--spacing) * 0);
  }

  .min-h-4 {

    min-height: calc(0.25rem * 4);

    min-height: calc(var(--spacing) * 4);
  }

  .min-h-16 {

    min-height: calc(0.25rem * 16);

    min-height: calc(var(--spacing) * 16);
  }

  .min-h-\[500px\] {

    min-height: 500px;
  }

  .min-h-screen {

    min-height: 100vh;
  }

  .min-h-svh {

    min-height: 100svh;
  }

  .w-\(--cell-size\) {

    width: var(--cell-size);
  }

  .w-\(--sidebar-width\) {

    width: var(--sidebar-width);
  }

  .w-0 {

    width: calc(0.25rem * 0);

    width: calc(var(--spacing) * 0);
  }

  .w-1 {

    width: calc(0.25rem * 1);

    width: calc(var(--spacing) * 1);
  }

  .w-1\.5 {

    width: calc(0.25rem * 1.5);

    width: calc(var(--spacing) * 1.5);
  }

  .w-2 {

    width: calc(0.25rem * 2);

    width: calc(var(--spacing) * 2);
  }

  .w-2\.5 {

    width: calc(0.25rem * 2.5);

    width: calc(var(--spacing) * 2.5);
  }

  .w-3 {

    width: calc(0.25rem * 3);

    width: calc(var(--spacing) * 3);
  }

  .w-3\.5 {

    width: calc(0.25rem * 3.5);

    width: calc(var(--spacing) * 3.5);
  }

  .w-3\/4 {

    width: calc(3/4 * 100%);
  }

  .w-4 {

    width: calc(0.25rem * 4);

    width: calc(var(--spacing) * 4);
  }

  .w-5 {

    width: calc(0.25rem * 5);

    width: calc(var(--spacing) * 5);
  }

  .w-6 {

    width: calc(0.25rem * 6);

    width: calc(var(--spacing) * 6);
  }

  .w-8 {

    width: calc(0.25rem * 8);

    width: calc(var(--spacing) * 8);
  }

  .w-9 {

    width: calc(0.25rem * 9);

    width: calc(var(--spacing) * 9);
  }

  .w-10 {

    width: calc(0.25rem * 10);

    width: calc(var(--spacing) * 10);
  }

  .w-11 {

    width: calc(0.25rem * 11);

    width: calc(var(--spacing) * 11);
  }

  .w-12 {

    width: calc(0.25rem * 12);

    width: calc(var(--spacing) * 12);
  }

  .w-16 {

    width: calc(0.25rem * 16);

    width: calc(var(--spacing) * 16);
  }

  .w-20 {

    width: calc(0.25rem * 20);

    width: calc(var(--spacing) * 20);
  }

  .w-24 {

    width: calc(0.25rem * 24);

    width: calc(var(--spacing) * 24);
  }

  .w-64 {

    width: calc(0.25rem * 64);

    width: calc(var(--spacing) * 64);
  }

  .w-72 {

    width: calc(0.25rem * 72);

    width: calc(var(--spacing) * 72);
  }

  .w-96 {

    width: calc(0.25rem * 96);

    width: calc(var(--spacing) * 96);
  }

  .w-\[1\.2rem\] {

    width: 1.2rem;
  }

  .w-\[1px\] {

    width: 1px;
  }

  .w-\[100px\] {

    width: 100px;
  }

  .w-auto {

    width: auto;
  }

  .w-fit {

    width: -moz-fit-content;

    width: fit-content;
  }

  .w-full {

    width: 100%;
  }

  .w-max {

    width: -moz-max-content;

    width: max-content;
  }

  .w-px {

    width: 1px;
  }

  .max-w-\(--skeleton-width\) {

    max-width: var(--skeleton-width);
  }

  .max-w-2xl {

    max-width: 42rem;

    max-width: var(--container-2xl);
  }

  .max-w-3xl {

    max-width: 48rem;

    max-width: var(--container-3xl);
  }

  .max-w-4xl {

    max-width: 56rem;

    max-width: var(--container-4xl);
  }

  .max-w-5xl {

    max-width: 64rem;

    max-width: var(--container-5xl);
  }

  .max-w-6xl {

    max-width: 72rem;

    max-width: var(--container-6xl);
  }

  .max-w-48 {

    max-width: calc(0.25rem * 48);

    max-width: calc(var(--spacing) * 48);
  }

  .max-w-60 {

    max-width: calc(0.25rem * 60);

    max-width: calc(var(--spacing) * 60);
  }

  .max-w-\[70\%\] {

    max-width: 70%;
  }

  .max-w-\[calc\(100\%-2rem\)\] {

    max-width: calc(100% - 2rem);
  }

  .max-w-full {

    max-width: 100%;
  }

  .max-w-max {

    max-width: -moz-max-content;

    max-width: max-content;
  }

  .max-w-md {

    max-width: 28rem;

    max-width: var(--container-md);
  }

  .max-w-xs {

    max-width: 20rem;

    max-width: var(--container-xs);
  }

  .min-w-\(--cell-size\) {

    min-width: var(--cell-size);
  }

  .min-w-0 {

    min-width: calc(0.25rem * 0);

    min-width: calc(var(--spacing) * 0);
  }

  .min-w-5 {

    min-width: calc(0.25rem * 5);

    min-width: calc(var(--spacing) * 5);
  }

  .min-w-8 {

    min-width: calc(0.25rem * 8);

    min-width: calc(var(--spacing) * 8);
  }

  .min-w-9 {

    min-width: calc(0.25rem * 9);

    min-width: calc(var(--spacing) * 9);
  }

  .min-w-10 {

    min-width: calc(0.25rem * 10);

    min-width: calc(var(--spacing) * 10);
  }

  .min-w-\[8rem\] {

    min-width: 8rem;
  }

  .min-w-\[12rem\] {

    min-width: 12rem;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {

    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {

    flex: 1;
  }

  .flex-shrink-0 {

    flex-shrink: 0;
  }

  .shrink-0 {

    flex-shrink: 0;
  }

  .flex-grow {

    flex-grow: 1;
  }

  .grow {

    flex-grow: 1;
  }

  .grow-0 {

    flex-grow: 0;
  }

  .basis-full {

    flex-basis: 100%;
  }

  .caption-bottom {

    caption-side: bottom;
  }

  .border-collapse {

    border-collapse: collapse;
  }

  .origin-\(--radix-context-menu-content-transform-origin\) {

    transform-origin: var(--radix-context-menu-content-transform-origin);
  }

  .origin-\(--radix-dropdown-menu-content-transform-origin\) {

    transform-origin: var(--radix-dropdown-menu-content-transform-origin);
  }

  .origin-\(--radix-hover-card-content-transform-origin\) {

    transform-origin: var(--radix-hover-card-content-transform-origin);
  }

  .origin-\(--radix-menubar-content-transform-origin\) {

    transform-origin: var(--radix-menubar-content-transform-origin);
  }

  .origin-\(--radix-popover-content-transform-origin\) {

    transform-origin: var(--radix-popover-content-transform-origin);
  }

  .origin-\(--radix-tooltip-content-transform-origin\) {

    transform-origin: var(--radix-tooltip-content-transform-origin);
  }

  .-translate-x-1\/2 {

    --tw-translate-x: calc(calc(1/2 * 100%) * -1);

    translate: calc(calc(1/2 * 100%) * -1) var(--tw-translate-y);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-px {

    --tw-translate-x: -1px;

    translate: -1px var(--tw-translate-y);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[-50\%\] {

    --tw-translate-x: -50%;

    translate: -50% var(--tw-translate-y);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-px {

    --tw-translate-x: 1px;

    translate: 1px var(--tw-translate-y);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {

    --tw-translate-y: calc(calc(1/2 * 100%) * -1);

    translate: var(--tw-translate-x) calc(calc(1/2 * 100%) * -1);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-0\.5 {

    --tw-translate-y: calc(var(--spacing) * 0.5);

    translate: var(--tw-translate-x) calc(0.25rem * 0.5);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-50\%\] {

    --tw-translate-y: -50%;

    translate: var(--tw-translate-x) -50%;

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-100\%\] {

    --tw-translate-y: -100%;

    translate: var(--tw-translate-x) -100%;

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[calc\(-50\%_-_2px\)\] {

    --tw-translate-y: calc(-50% - 2px);

    translate: var(--tw-translate-x) calc(-50% - 2px);

    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-0 {

    --tw-scale-x: 0%;

    --tw-scale-y: 0%;

    --tw-scale-z: 0%;

    scale: 0% 0%;

    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-100 {

    --tw-scale-x: 100%;

    --tw-scale-y: 100%;

    --tw-scale-z: 100%;

    scale: 100% 100%;

    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rotate-0 {

    rotate: 0deg;
  }

  .rotate-45 {

    rotate: 45deg;
  }

  .rotate-90 {

    rotate: 90deg;
  }

  .transform {

    transform:          ;

    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }

  .animate-caret-blink {

    animation: caret-blink 1.25s ease-out infinite;
  }

  .animate-in {

    animation: enter .15sease0s1normalforwards;

    animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
  }

  .animate-ping {

    animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;

    animation: var(--animate-ping);
  }

  .animate-pulse {

    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;

    animation: var(--animate-pulse);
  }

  .animate-spin {

    animation: spin 1s linear infinite;

    animation: var(--animate-spin);
  }

  .cursor-default {

    cursor: default;
  }

  .cursor-pointer {

    cursor: pointer;
  }

  .touch-none {

    touch-action: none;
  }

  .scroll-py-1 {

    scroll-padding-block: calc(0.25rem * 1);

    scroll-padding-block: calc(var(--spacing) * 1);
  }

  .list-none {

    list-style-type: none;
  }

  .auto-rows-min {

    grid-auto-rows: min-content;
  }

  .grid-cols-1 {

    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {

    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {

    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-\[0_1fr\] {

    grid-template-columns: 0 1fr;
  }

  .grid-rows-\[auto_auto\] {

    grid-template-rows: auto auto;
  }

  .flex-col {

    flex-direction: column;
  }

  .flex-col-reverse {

    flex-direction: column-reverse;
  }

  .flex-row {

    flex-direction: row;
  }

  .flex-wrap {

    flex-wrap: wrap;
  }

  .items-center {

    align-items: center;
  }

  .items-end {

    align-items: flex-end;
  }

  .items-start {

    align-items: flex-start;
  }

  .items-stretch {

    align-items: stretch;
  }

  .justify-between {

    justify-content: space-between;
  }

  .justify-center {

    justify-content: center;
  }

  .justify-end {

    justify-content: flex-end;
  }

  .justify-items-start {

    justify-items: start;
  }

  .gap-0\.5 {

    gap: calc(0.25rem * 0.5);

    gap: calc(var(--spacing) * 0.5);
  }

  .gap-1 {

    gap: calc(0.25rem * 1);

    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {

    gap: calc(0.25rem * 1.5);

    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {

    gap: calc(0.25rem * 2);

    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {

    gap: calc(0.25rem * 3);

    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {

    gap: calc(0.25rem * 4);

    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {

    gap: calc(0.25rem * 6);

    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {

    gap: calc(0.25rem * 8);

    gap: calc(var(--spacing) * 8);
  }

  .space-y-0 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(0.25rem * 0) * 0);

      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(0.25rem * 0) * calc(1 - 0));

      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-1 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(0.25rem * 1) * 0);

      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(0.25rem * 1) * calc(1 - 0));

      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-2 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(0.25rem * 2) * 0);

      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(0.25rem * 2) * calc(1 - 0));

      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-3 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(0.25rem * 3) * 0);

      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(0.25rem * 3) * calc(1 - 0));

      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-4 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(0.25rem * 4) * 0);

      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(0.25rem * 4) * calc(1 - 0));

      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-6 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(0.25rem * 6) * 0);

      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(0.25rem * 6) * calc(1 - 0));

      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-y-8 {

    :where(& > :not(:last-child)) {

      --tw-space-y-reverse: 0;

      margin-block-start: calc(calc(0.25rem * 8) * 0);

      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));

      margin-block-end: calc(calc(0.25rem * 8) * calc(1 - 0));

      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  .space-x-1 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(0.25rem * 1) * 0);

      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(0.25rem * 1) * calc(1 - 0));

      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .space-x-2 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(0.25rem * 2) * 0);

      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(0.25rem * 2) * calc(1 - 0));

      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .space-x-3 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(0.25rem * 3) * 0);

      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(0.25rem * 3) * calc(1 - 0));

      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .space-x-4 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(0.25rem * 4) * 0);

      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(0.25rem * 4) * calc(1 - 0));

      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .space-x-6 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(0.25rem * 6) * 0);

      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(0.25rem * 6) * calc(1 - 0));

      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .space-x-8 {

    :where(& > :not(:last-child)) {

      --tw-space-x-reverse: 0;

      margin-inline-start: calc(calc(0.25rem * 8) * 0);

      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));

      margin-inline-end: calc(calc(0.25rem * 8) * calc(1 - 0));

      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  .gap-y-0\.5 {

    row-gap: calc(0.25rem * 0.5);

    row-gap: calc(var(--spacing) * 0.5);
  }

  .self-start {

    align-self: flex-start;
  }

  .justify-self-end {

    justify-self: flex-end;
  }

  .overflow-auto {

    overflow: auto;
  }

  .overflow-hidden {

    overflow: hidden;
  }

  .overflow-x-auto {

    overflow-x: auto;
  }

  .overflow-x-hidden {

    overflow-x: hidden;
  }

  .overflow-y-auto {

    overflow-y: auto;
  }

  .rounded {

    border-radius: 0.25rem;
  }

  .rounded-2xl {

    border-radius: 1rem;

    border-radius: var(--radius-2xl);
  }

  .rounded-3xl {

    border-radius: 1.5rem;

    border-radius: var(--radius-3xl);
  }

  .rounded-\[2px\] {

    border-radius: 2px;
  }

  .rounded-\[inherit\] {

    border-radius: inherit;
  }

  .rounded-full {

    border-radius: calc(infinity * 1px);
  }

  .rounded-lg {

    border-radius: 0.75rem;

    border-radius: var(--radius);
  }

  .rounded-md {

    border-radius: calc(0.75rem - 2px);

    border-radius: calc(var(--radius) - 2px);
  }

  .rounded-none {

    border-radius: 0;
  }

  .rounded-sm {

    border-radius: calc(0.75rem - 4px);

    border-radius: calc(var(--radius) - 4px);
  }

  .rounded-xl {

    border-radius: calc(0.75rem + 4px);

    border-radius: calc(var(--radius) + 4px);
  }

  .rounded-xs {

    border-radius: 0.125rem;

    border-radius: var(--radius-xs);
  }

  .rounded-t-lg {

    border-top-left-radius: 0.75rem;

    border-top-left-radius: var(--radius);

    border-top-right-radius: 0.75rem;

    border-top-right-radius: var(--radius);
  }

  .rounded-l-md {

    border-top-left-radius: calc(0.75rem - 2px);

    border-top-left-radius: calc(var(--radius) - 2px);

    border-bottom-left-radius: calc(0.75rem - 2px);

    border-bottom-left-radius: calc(var(--radius) - 2px);
  }

  .rounded-tl-sm {

    border-top-left-radius: calc(0.75rem - 4px);

    border-top-left-radius: calc(var(--radius) - 4px);
  }

  .rounded-r-md {

    border-top-right-radius: calc(0.75rem - 2px);

    border-top-right-radius: calc(var(--radius) - 2px);

    border-bottom-right-radius: calc(0.75rem - 2px);

    border-bottom-right-radius: calc(var(--radius) - 2px);
  }

  .rounded-br-none {

    border-bottom-right-radius: 0;
  }

  .rounded-bl-none {

    border-bottom-left-radius: 0;
  }

  .border {

    border-style: var(--tw-border-style);

    border-width: 1px;
  }

  .border-2 {

    border-style: var(--tw-border-style);

    border-width: 2px;
  }

  .border-4 {

    border-style: var(--tw-border-style);

    border-width: 4px;
  }

  .border-\[1\.5px\] {

    border-style: var(--tw-border-style);

    border-width: 1.5px;
  }

  .border-y {

    border-block-style: var(--tw-border-style);

    border-block-width: 1px;
  }

  .border-t {

    border-top-style: var(--tw-border-style);

    border-top-width: 1px;
  }

  .border-r {

    border-right-style: var(--tw-border-style);

    border-right-width: 1px;
  }

  .border-b {

    border-bottom-style: var(--tw-border-style);

    border-bottom-width: 1px;
  }

  .border-b-2 {

    border-bottom-style: var(--tw-border-style);

    border-bottom-width: 2px;
  }

  .border-l {

    border-left-style: var(--tw-border-style);

    border-left-width: 1px;
  }

  .border-dashed {

    --tw-border-style: dashed;

    border-style: dashed;
  }

  .border-\(--color-border\) {

    border-color: oklch(0.88 0.03 280);

    border-color: var(--color-border);
  }

  .border-border {

    border-color: oklch(0.88 0.03 280);

    border-color: var(--border);
  }

  .border-border\/50 {

    border-color: oklch(0.88 0.03 280);

    border-color: var(--border);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.88 0.03 280) 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--border) 50%, transparent);
      }
}
  }

  .border-destructive {

    border-color: oklch(0.6 0.25 25);

    border-color: var(--destructive);
  }

  .border-destructive\/20 {

    border-color: oklch(0.6 0.25 25);

    border-color: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.6 0.25 25) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
}
  }

  .border-destructive\/30 {

    border-color: oklch(0.6 0.25 25);

    border-color: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.6 0.25 25) 30%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--destructive) 30%, transparent);
      }
}
  }

  .border-input {

    border-color: oklch(0.95 0.02 280);

    border-color: var(--input);
  }

  .border-muted {

    border-color: oklch(0.94 0.02 280);

    border-color: var(--muted);
  }

  .border-primary {

    border-color: oklch(0.65 0.25 250);

    border-color: var(--primary);
  }

  .border-primary\/20 {

    border-color: oklch(0.65 0.25 250);

    border-color: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.65 0.25 250) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--primary) 20%, transparent);
      }
}
  }

  .border-primary\/50 {

    border-color: oklch(0.65 0.25 250);

    border-color: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.65 0.25 250) 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--primary) 50%, transparent);
      }
}
  }

  .border-sidebar-border {

    border-color: oklch(0.88 0.03 280);

    border-color: var(--sidebar-border);
  }

  .border-success {

    border-color: oklch(0.7 0.18 160);

    border-color: var(--success);
  }

  .border-success\/20 {

    border-color: oklch(0.7 0.18 160);

    border-color: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.7 0.18 160) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--success) 20%, transparent);
      }
}
  }

  .border-success\/30 {

    border-color: oklch(0.7 0.18 160);

    border-color: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.7 0.18 160) 30%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--success) 30%, transparent);
      }
}
  }

  .border-transparent {

    border-color: transparent;
  }

  .border-warning {

    border-color: oklch(0.75 0.2 50);

    border-color: var(--warning);
  }

  .border-warning\/20 {

    border-color: oklch(0.75 0.2 50);

    border-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.75 0.2 50) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--warning) 20%, transparent);
      }
}
  }

  .border-warning\/30 {

    border-color: oklch(0.75 0.2 50);

    border-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.75 0.2 50) 30%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--warning) 30%, transparent);
      }
}
  }

  .border-warning\/40 {

    border-color: oklch(0.75 0.2 50);

    border-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.75 0.2 50) 40%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--warning) 40%, transparent);
      }
}
  }

  .border-warning\/50 {

    border-color: oklch(0.75 0.2 50);

    border-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, oklch(0.75 0.2 50) 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--warning) 50%, transparent);
      }
}
  }

  .border-white\/20 {

    border-color: color-mix(in srgb, #fff 20%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      border-color: color-mix(in oklab, #fff 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
}
  }

  .border-t-transparent {

    border-top-color: transparent;
  }

  .border-l-transparent {

    border-left-color: transparent;
  }

  .bg-\(--color-bg\) {

    background-color: var(--color-bg);
  }

  .bg-accent {

    background-color: oklch(0.8 0.15 320);

    background-color: var(--accent);
  }

  .bg-amber-400 {

    background-color: oklch(82.8% 0.189 84.429);

    background-color: var(--color-amber-400);
  }

  .bg-background {

    background-color: oklch(0.99 0.01 120);

    background-color: var(--background);
  }

  .bg-background\/80 {

    background-color: oklch(0.99 0.01 120);

    background-color: var(--background);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.99 0.01 120) 80%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--background) 80%, transparent);
      }
}
  }

  .bg-background\/95 {

    background-color: oklch(0.99 0.01 120);

    background-color: var(--background);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.99 0.01 120) 95%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--background) 95%, transparent);
      }
}
  }

  .bg-black\/20 {

    background-color: color-mix(in srgb, #000 20%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, #000 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
      }
}
  }

  .bg-black\/50 {

    background-color: color-mix(in srgb, #000 50%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, #000 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
      }
}
  }

  .bg-blue-400 {

    background-color: oklch(70.7% 0.165 254.624);

    background-color: var(--color-blue-400);
  }

  .bg-blue-500 {

    background-color: oklch(62.3% 0.214 259.815);

    background-color: var(--color-blue-500);
  }

  .bg-border {

    background-color: oklch(0.88 0.03 280);

    background-color: var(--border);
  }

  .bg-card {

    background-color: oklch(0.98 0.01 120);

    background-color: var(--card);
  }

  .bg-destructive {

    background-color: oklch(0.6 0.25 25);

    background-color: var(--destructive);
  }

  .bg-destructive\/5 {

    background-color: oklch(0.6 0.25 25);

    background-color: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.6 0.25 25) 5%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--destructive) 5%, transparent);
      }
}
  }

  .bg-destructive\/10 {

    background-color: oklch(0.6 0.25 25);

    background-color: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.6 0.25 25) 10%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
      }
}
  }

  .bg-destructive\/20 {

    background-color: oklch(0.6 0.25 25);

    background-color: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.6 0.25 25) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
}
  }

  .bg-foreground {

    background-color: oklch(0.15 0.02 280);

    background-color: var(--foreground);
  }

  .bg-green-500 {

    background-color: oklch(72.3% 0.219 149.579);

    background-color: var(--color-green-500);
  }

  .bg-muted {

    background-color: oklch(0.94 0.02 280);

    background-color: var(--muted);
  }

  .bg-muted\/30 {

    background-color: oklch(0.94 0.02 280);

    background-color: var(--muted);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.94 0.02 280) 30%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--muted) 30%, transparent);
      }
}
  }

  .bg-muted\/50 {

    background-color: oklch(0.94 0.02 280);

    background-color: var(--muted);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.94 0.02 280) 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
}
  }

  .bg-orange-500 {

    background-color: oklch(70.5% 0.213 47.604);

    background-color: var(--color-orange-500);
  }

  .bg-pink-500 {

    background-color: oklch(65.6% 0.241 354.308);

    background-color: var(--color-pink-500);
  }

  .bg-popover {

    background-color: oklch(0.98 0.01 120);

    background-color: var(--popover);
  }

  .bg-primary {

    background-color: oklch(0.65 0.25 250);

    background-color: var(--primary);
  }

  .bg-primary\/5 {

    background-color: oklch(0.65 0.25 250);

    background-color: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.65 0.25 250) 5%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--primary) 5%, transparent);
      }
}
  }

  .bg-primary\/10 {

    background-color: oklch(0.65 0.25 250);

    background-color: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.65 0.25 250) 10%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--primary) 10%, transparent);
      }
}
  }

  .bg-primary\/20 {

    background-color: oklch(0.65 0.25 250);

    background-color: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.65 0.25 250) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--primary) 20%, transparent);
      }
}
  }

  .bg-primary\/30 {

    background-color: oklch(0.65 0.25 250);

    background-color: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.65 0.25 250) 30%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--primary) 30%, transparent);
      }
}
  }

  .bg-purple-500 {

    background-color: oklch(62.7% 0.265 303.9);

    background-color: var(--color-purple-500);
  }

  .bg-purple-500\/20 {

    background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 20%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(62.7% 0.265 303.9) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
      }
}
  }

  .bg-red-500 {

    background-color: oklch(63.7% 0.237 25.331);

    background-color: var(--color-red-500);
  }

  .bg-secondary {

    background-color: oklch(0.85 0.08 300);

    background-color: var(--secondary);
  }

  .bg-sidebar {

    background-color: oklch(0.97 0.01 280);

    background-color: var(--sidebar);
  }

  .bg-sidebar-border {

    background-color: oklch(0.88 0.03 280);

    background-color: var(--sidebar-border);
  }

  .bg-success {

    background-color: oklch(0.7 0.18 160);

    background-color: var(--success);
  }

  .bg-success\/5 {

    background-color: oklch(0.7 0.18 160);

    background-color: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.7 0.18 160) 5%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--success) 5%, transparent);
      }
}
  }

  .bg-success\/10 {

    background-color: oklch(0.7 0.18 160);

    background-color: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.7 0.18 160) 10%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--success) 10%, transparent);
      }
}
  }

  .bg-success\/20 {

    background-color: oklch(0.7 0.18 160);

    background-color: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.7 0.18 160) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--success) 20%, transparent);
      }
}
  }

  .bg-transparent {

    background-color: transparent;
  }

  .bg-warning {

    background-color: oklch(0.75 0.2 50);

    background-color: var(--warning);
  }

  .bg-warning\/5 {

    background-color: oklch(0.75 0.2 50);

    background-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.75 0.2 50) 5%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--warning) 5%, transparent);
      }
}
  }

  .bg-warning\/10 {

    background-color: oklch(0.75 0.2 50);

    background-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.75 0.2 50) 10%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--warning) 10%, transparent);
      }
}
  }

  .bg-warning\/20 {

    background-color: oklch(0.75 0.2 50);

    background-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.75 0.2 50) 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--warning) 20%, transparent);
      }
}
  }

  .bg-warning\/30 {

    background-color: oklch(0.75 0.2 50);

    background-color: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, oklch(0.75 0.2 50) 30%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--warning) 30%, transparent);
      }
}
  }

  .bg-white {

    background-color: #fff;

    background-color: var(--color-white);
  }

  .bg-white\/20 {

    background-color: color-mix(in srgb, #fff 20%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, #fff 20%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
}
  }

  .bg-white\/30 {

    background-color: color-mix(in srgb, #fff 30%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, #fff 30%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
}
  }

  .bg-white\/95 {

    background-color: color-mix(in srgb, #fff 95%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      background-color: color-mix(in oklab, #fff 95%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--color-white) 95%, transparent);
      }
}
  }

  .bg-yellow-400 {

    background-color: oklch(85.2% 0.199 91.936);

    background-color: var(--color-yellow-400);
  }

  .bg-yellow-500 {

    background-color: oklch(79.5% 0.184 86.047);

    background-color: var(--color-yellow-500);
  }

  .bg-gradient-to-br {

    --tw-gradient-position: to bottom right in oklab;

    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {

    --tw-gradient-position: to right in oklab;

    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-background {

    --tw-gradient-from: var(--background);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-50 {

    --tw-gradient-from: var(--color-blue-50);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-300 {

    --tw-gradient-from: var(--color-blue-300);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-400 {

    --tw-gradient-from: var(--color-blue-400);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-500 {

    --tw-gradient-from: var(--color-blue-500);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-destructive {

    --tw-gradient-from: var(--destructive);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-destructive\/5 {

    --tw-gradient-from: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-from: color-mix(in oklab, var(--destructive) 5%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-destructive\/10 {

    --tw-gradient-from: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-from: color-mix(in oklab, var(--destructive) 10%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-400 {

    --tw-gradient-from: var(--color-green-400);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-400 {

    --tw-gradient-from: var(--color-orange-400);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-pink-400 {

    --tw-gradient-from: var(--color-pink-400);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-primary {

    --tw-gradient-from: var(--primary);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-primary\/5 {

    --tw-gradient-from: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-from: color-mix(in oklab, var(--primary) 5%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-400 {

    --tw-gradient-from: var(--color-purple-400);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-success {

    --tw-gradient-from: var(--success);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-success\/5 {

    --tw-gradient-from: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-from: color-mix(in oklab, var(--success) 5%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-warning\/10 {

    --tw-gradient-from: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-from: color-mix(in oklab, var(--warning) 10%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-warning\/20 {

    --tw-gradient-from: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-from: color-mix(in oklab, var(--warning) 20%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-yellow-400 {

    --tw-gradient-from: var(--color-yellow-400);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-background {

    --tw-gradient-via: var(--background);

    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);

    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-blue-500 {

    --tw-gradient-to: var(--color-blue-500);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-destructive\/5 {

    --tw-gradient-to: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--destructive) 5%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-destructive\/10 {

    --tw-gradient-to: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--destructive) 10%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-destructive\/20 {

    --tw-gradient-to: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--destructive) 20%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-destructive\/80 {

    --tw-gradient-to: var(--destructive);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--destructive) 80%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-100 {

    --tw-gradient-to: var(--color-indigo-100);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-600 {

    --tw-gradient-to: var(--color-indigo-600);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-500 {

    --tw-gradient-to: var(--color-orange-500);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-500 {

    --tw-gradient-to: var(--color-pink-500);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-primary\/5 {

    --tw-gradient-to: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--primary) 5%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-primary\/10 {

    --tw-gradient-to: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--primary) 10%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-primary\/70 {

    --tw-gradient-to: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--primary) 70%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-500 {

    --tw-gradient-to: var(--color-purple-500);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-600 {

    --tw-gradient-to: var(--color-purple-600);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-400 {

    --tw-gradient-to: var(--color-red-400);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-500 {

    --tw-gradient-to: var(--color-red-500);

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-success\/5 {

    --tw-gradient-to: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--success) 5%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-success\/10 {

    --tw-gradient-to: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--success) 10%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-success\/80 {

    --tw-gradient-to: var(--success);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--success) 80%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-warning\/5 {

    --tw-gradient-to: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--warning) 5%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-warning\/10 {

    --tw-gradient-to: var(--warning);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-gradient-to: color-mix(in oklab, var(--warning) 10%, transparent);
    }

    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .bg-clip-text {

    -webkit-background-clip: text;

            background-clip: text;
  }

  .fill-current {

    fill: currentcolor;
  }

  .fill-primary {

    fill: oklch(0.65 0.25 250);

    fill: var(--primary);
  }

  .object-cover {

    -o-object-fit: cover;

       object-fit: cover;
  }

  .p-0 {

    padding: calc(0.25rem * 0);

    padding: calc(var(--spacing) * 0);
  }

  .p-1 {

    padding: calc(0.25rem * 1);

    padding: calc(var(--spacing) * 1);
  }

  .p-2 {

    padding: calc(0.25rem * 2);

    padding: calc(var(--spacing) * 2);
  }

  .p-3 {

    padding: calc(0.25rem * 3);

    padding: calc(var(--spacing) * 3);
  }

  .p-4 {

    padding: calc(0.25rem * 4);

    padding: calc(var(--spacing) * 4);
  }

  .p-6 {

    padding: calc(0.25rem * 6);

    padding: calc(var(--spacing) * 6);
  }

  .p-8 {

    padding: calc(0.25rem * 8);

    padding: calc(var(--spacing) * 8);
  }

  .p-10 {

    padding: calc(0.25rem * 10);

    padding: calc(var(--spacing) * 10);
  }

  .p-\[3px\] {

    padding: 3px;
  }

  .p-px {

    padding: 1px;
  }

  .px-\(--cell-size\) {

    padding-inline: var(--cell-size);
  }

  .px-0 {

    padding-inline: calc(0.25rem * 0);

    padding-inline: calc(var(--spacing) * 0);
  }

  .px-1 {

    padding-inline: calc(0.25rem * 1);

    padding-inline: calc(var(--spacing) * 1);
  }

  .px-1\.5 {

    padding-inline: calc(0.25rem * 1.5);

    padding-inline: calc(var(--spacing) * 1.5);
  }

  .px-2 {

    padding-inline: calc(0.25rem * 2);

    padding-inline: calc(var(--spacing) * 2);
  }

  .px-2\.5 {

    padding-inline: calc(0.25rem * 2.5);

    padding-inline: calc(var(--spacing) * 2.5);
  }

  .px-3 {

    padding-inline: calc(0.25rem * 3);

    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {

    padding-inline: calc(0.25rem * 4);

    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {

    padding-inline: calc(0.25rem * 6);

    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {

    padding-inline: calc(0.25rem * 8);

    padding-inline: calc(var(--spacing) * 8);
  }

  .px-10 {

    padding-inline: calc(0.25rem * 10);

    padding-inline: calc(var(--spacing) * 10);
  }

  .py-0\.5 {

    padding-block: calc(0.25rem * 0.5);

    padding-block: calc(var(--spacing) * 0.5);
  }

  .py-1 {

    padding-block: calc(0.25rem * 1);

    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {

    padding-block: calc(0.25rem * 1.5);

    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {

    padding-block: calc(0.25rem * 2);

    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {

    padding-block: calc(0.25rem * 3);

    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {

    padding-block: calc(0.25rem * 4);

    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {

    padding-block: calc(0.25rem * 6);

    padding-block: calc(var(--spacing) * 6);
  }

  .py-7 {

    padding-block: calc(0.25rem * 7);

    padding-block: calc(var(--spacing) * 7);
  }

  .py-8 {

    padding-block: calc(0.25rem * 8);

    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {

    padding-block: calc(0.25rem * 12);

    padding-block: calc(var(--spacing) * 12);
  }

  .pt-0 {

    padding-top: calc(0.25rem * 0);

    padding-top: calc(var(--spacing) * 0);
  }

  .pt-3 {

    padding-top: calc(0.25rem * 3);

    padding-top: calc(var(--spacing) * 3);
  }

  .pt-4 {

    padding-top: calc(0.25rem * 4);

    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {

    padding-top: calc(0.25rem * 6);

    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {

    padding-top: calc(0.25rem * 8);

    padding-top: calc(var(--spacing) * 8);
  }

  .pr-1 {

    padding-right: calc(0.25rem * 1);

    padding-right: calc(var(--spacing) * 1);
  }

  .pr-2 {

    padding-right: calc(0.25rem * 2);

    padding-right: calc(var(--spacing) * 2);
  }

  .pr-2\.5 {

    padding-right: calc(0.25rem * 2.5);

    padding-right: calc(var(--spacing) * 2.5);
  }

  .pr-8 {

    padding-right: calc(0.25rem * 8);

    padding-right: calc(var(--spacing) * 8);
  }

  .pb-3 {

    padding-bottom: calc(0.25rem * 3);

    padding-bottom: calc(var(--spacing) * 3);
  }

  .pb-4 {

    padding-bottom: calc(0.25rem * 4);

    padding-bottom: calc(var(--spacing) * 4);
  }

  .pl-2 {

    padding-left: calc(0.25rem * 2);

    padding-left: calc(var(--spacing) * 2);
  }

  .pl-4 {

    padding-left: calc(0.25rem * 4);

    padding-left: calc(var(--spacing) * 4);
  }

  .pl-8 {

    padding-left: calc(0.25rem * 8);

    padding-left: calc(var(--spacing) * 8);
  }

  .text-center {

    text-align: center;
  }

  .text-left {

    text-align: left;
  }

  .text-right {

    text-align: right;
  }

  .align-middle {

    vertical-align: middle;
  }

  .font-heading {

    font-family: var(--font-poppins);
  }

  .font-mono {

    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;

    font-family: var(--font-mono);
  }

  .font-sans {

    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

    font-family: var(--font-sans);
  }

  .text-2xl {

    font-size: 1.5rem;

    font-size: var(--text-2xl);

    line-height: calc(2 / 1.5);

    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {

    font-size: 1.875rem;

    font-size: var(--text-3xl);

    line-height: calc(2.25 / 1.875);

    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {

    font-size: 2.25rem;

    font-size: var(--text-4xl);

    line-height: calc(2.5 / 2.25);

    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-8xl {

    font-size: 6rem;

    font-size: var(--text-8xl);

    line-height: 1;

    line-height: var(--tw-leading, var(--text-8xl--line-height));
  }

  .text-base {

    font-size: 1rem;

    font-size: var(--text-base);

    line-height: calc(1.5 / 1);

    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {

    font-size: 1.125rem;

    font-size: var(--text-lg);

    line-height: calc(1.75 / 1.125);

    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {

    font-size: 0.875rem;

    font-size: var(--text-sm);

    line-height: calc(1.25 / 0.875);

    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {

    font-size: 1.25rem;

    font-size: var(--text-xl);

    line-height: calc(1.75 / 1.25);

    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {

    font-size: 0.75rem;

    font-size: var(--text-xs);

    line-height: calc(1 / 0.75);

    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[0\.8rem\] {

    font-size: 0.8rem;
  }

  .leading-none {

    --tw-leading: 1;

    line-height: 1;
  }

  .leading-relaxed {

    --tw-leading: var(--leading-relaxed);

    line-height: 1.625;

    line-height: var(--leading-relaxed);
  }

  .leading-snug {

    --tw-leading: var(--leading-snug);

    line-height: 1.375;

    line-height: var(--leading-snug);
  }

  .font-bold {

    --tw-font-weight: var(--font-weight-bold);

    font-weight: 700;

    font-weight: var(--font-weight-bold);
  }

  .font-extrabold {

    --tw-font-weight: var(--font-weight-extrabold);

    font-weight: 800;

    font-weight: var(--font-weight-extrabold);
  }

  .font-medium {

    --tw-font-weight: var(--font-weight-medium);

    font-weight: 500;

    font-weight: var(--font-weight-medium);
  }

  .font-normal {

    --tw-font-weight: var(--font-weight-normal);

    font-weight: 400;

    font-weight: var(--font-weight-normal);
  }

  .font-semibold {

    --tw-font-weight: var(--font-weight-semibold);

    font-weight: 600;

    font-weight: var(--font-weight-semibold);
  }

  .tracking-tight {

    --tw-tracking: var(--tracking-tight);

    letter-spacing: -0.025em;

    letter-spacing: var(--tracking-tight);
  }

  .tracking-widest {

    --tw-tracking: var(--tracking-widest);

    letter-spacing: 0.1em;

    letter-spacing: var(--tracking-widest);
  }

  .text-balance {

    text-wrap: balance;
  }

  .break-words {

    overflow-wrap: break-word;
  }

  .break-all {

    word-break: break-all;
  }

  .whitespace-nowrap {

    white-space: nowrap;
  }

  .whitespace-pre-line {

    white-space: pre-line;
  }

  .text-accent-foreground {

    color: oklch(0.15 0.02 280);

    color: var(--accent-foreground);
  }

  .text-amber-500 {

    color: oklch(76.9% 0.188 70.08);

    color: var(--color-amber-500);
  }

  .text-black {

    color: #000;

    color: var(--color-black);
  }

  .text-blue-500 {

    color: oklch(62.3% 0.214 259.815);

    color: var(--color-blue-500);
  }

  .text-card-foreground {

    color: oklch(0.15 0.02 280);

    color: var(--card-foreground);
  }

  .text-current {

    color: currentcolor;
  }

  .text-destructive {

    color: oklch(0.6 0.25 25);

    color: var(--destructive);
  }

  .text-destructive-foreground {

    color: oklch(0.98 0.01 120);

    color: var(--destructive-foreground);
  }

  .text-foreground {

    color: oklch(0.15 0.02 280);

    color: var(--foreground);
  }

  .text-foreground\/50 {

    color: oklch(0.15 0.02 280);

    color: var(--foreground);

    @supports (color: color-mix(in lab, red, red)) {

      color: color-mix(in oklab, oklch(0.15 0.02 280) 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        color: color-mix(in oklab, var(--foreground) 50%, transparent);
      }
}
  }

  .text-green-500 {

    color: oklch(72.3% 0.219 149.579);

    color: var(--color-green-500);
  }

  .text-muted-foreground {

    color: oklch(0.5 0.05 280);

    color: var(--muted-foreground);
  }

  .text-orange-500 {

    color: oklch(70.5% 0.213 47.604);

    color: var(--color-orange-500);
  }

  .text-pink-500 {

    color: oklch(65.6% 0.241 354.308);

    color: var(--color-pink-500);
  }

  .text-popover-foreground {

    color: oklch(0.15 0.02 280);

    color: var(--popover-foreground);
  }

  .text-primary {

    color: oklch(0.65 0.25 250);

    color: var(--primary);
  }

  .text-primary-foreground {

    color: oklch(0.98 0.01 120);

    color: var(--primary-foreground);
  }

  .text-primary\/50 {

    color: oklch(0.65 0.25 250);

    color: var(--primary);

    @supports (color: color-mix(in lab, red, red)) {

      color: color-mix(in oklab, oklch(0.65 0.25 250) 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        color: color-mix(in oklab, var(--primary) 50%, transparent);
      }
}
  }

  .text-purple-500 {

    color: oklch(62.7% 0.265 303.9);

    color: var(--color-purple-500);
  }

  .text-secondary-foreground {

    color: oklch(0.15 0.02 280);

    color: var(--secondary-foreground);
  }

  .text-sidebar-foreground {

    color: oklch(0.15 0.02 280);

    color: var(--sidebar-foreground);
  }

  .text-sidebar-foreground\/70 {

    color: oklch(0.15 0.02 280);

    color: var(--sidebar-foreground);

    @supports (color: color-mix(in lab, red, red)) {

      color: color-mix(in oklab, oklch(0.15 0.02 280) 70%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        color: color-mix(in oklab, var(--sidebar-foreground) 70%, transparent);
      }
}
  }

  .text-success {

    color: oklch(0.7 0.18 160);

    color: var(--success);
  }

  .text-transparent {

    color: transparent;
  }

  .text-warning {

    color: oklch(0.75 0.2 50);

    color: var(--warning);
  }

  .text-warning-foreground {

    color: oklch(0.15 0.02 280);

    color: var(--warning-foreground);
  }

  .text-white {

    color: #fff;

    color: var(--color-white);
  }

  .text-yellow-400 {

    color: oklch(85.2% 0.199 91.936);

    color: var(--color-yellow-400);
  }

  .text-yellow-500 {

    color: oklch(79.5% 0.184 86.047);

    color: var(--color-yellow-500);
  }

  .capitalize {

    text-transform: capitalize;
  }

  .italic {

    font-style: italic;
  }

  .tabular-nums {

    --tw-numeric-spacing: tabular-nums;

    font-feature-settings:       tabular-nums  ;

    font-feature-settings: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);

    font-variant-numeric:       tabular-nums  ;

    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }

  .underline-offset-4 {

    text-underline-offset: 4px;
  }

  .antialiased {

    -webkit-font-smoothing: antialiased;

    -moz-osx-font-smoothing: grayscale;
  }

  .opacity-0 {

    opacity: 0%;
  }

  .opacity-50 {

    opacity: 50%;
  }

  .opacity-60 {

    opacity: 60%;
  }

  .opacity-70 {

    opacity: 70%;
  }

  .opacity-75 {

    opacity: 75%;
  }

  .opacity-90 {

    opacity: 90%;
  }

  .shadow {

    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-2xl {

    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 25px 50px -12px rgb(0 0 0 / 0.25);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0_0_0_1px_hsl\(var\(--sidebar-border\)\)\] {

    --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-border)));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 0 0 1px hsl(oklch(0.88 0.03 280));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {

    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {

    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-none {

    --tw-shadow: 0 0 #0000;

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 0 #0000;

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {

    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {

    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {

    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 2px 0 rgb(0 0 0 / 0.05);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-0 {

    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-1 {

    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-black\/10 {

    --tw-ring-color: color-mix(in srgb, #000 10%, transparent);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-ring-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }

  .ring-ring\/50 {

    --tw-ring-color: var(--ring);

    @supports (color: color-mix(in lab, red, red)) {

      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .ring-sidebar-ring {

    --tw-ring-color: var(--sidebar-ring);
  }

  .ring-offset-background {

    --tw-ring-offset-color: var(--background);
  }

  .outline-hidden {

    --tw-outline-style: none;

    outline-style: none;

    @media (forced-colors: active) {

      outline: 2px solid transparent;

      outline-offset: 2px;
    }
  }

  .outline {

    outline-style: var(--tw-outline-style);

    outline-width: 1px;
  }

  .blur-lg {

    --tw-blur: blur(var(--blur-lg));

    filter: blur(16px)                ;

    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }

  .backdrop-blur {

    --tw-backdrop-blur: blur(8px);

    backdrop-filter: blur(8px)                ;

    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }

  .backdrop-blur-sm {

    --tw-backdrop-blur: blur(var(--blur-sm));

    backdrop-filter: blur(8px)                ;

    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }

  .transition {

    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {

    transition-property: color,box-shadow;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[left\,right\,width\] {

    transition-property: left,right,width;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[margin\,opacity\] {

    transition-property: margin,opacity;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[width\,height\,padding\] {

    transition-property: width,height,padding;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[width\] {

    transition-property: width;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {

    transition-property: all;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {

    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {

    transition-property: opacity;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {

    transition-property: transform, translate, scale, rotate;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));

    transition-duration: 150ms;

    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-200 {

    --tw-duration: 200ms;

    transition-duration: 200ms;
  }

  .duration-300 {

    --tw-duration: 300ms;

    transition-duration: 300ms;
  }

  .duration-1000 {

    --tw-duration: 1000ms;

    transition-duration: 1000ms;
  }

  .ease-in-out {

    --tw-ease: var(--ease-in-out);

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-timing-function: var(--ease-in-out);
  }

  .ease-linear {

    --tw-ease: linear;

    transition-timing-function: linear;
  }

  .fade-in-0 {

    --tw-enter-opacity: calc(0/100);

    --tw-enter-opacity: 0;
  }

  .outline-none {

    --tw-outline-style: none;

    outline-style: none;
  }

  .select-none {

    -webkit-user-select: none;

    -moz-user-select: none;

         user-select: none;
  }

  .zoom-in-95 {

    --tw-enter-scale: calc(95*1%);

    --tw-enter-scale: .95;
  }

  .\[--cell-size\:--spacing\(8\)\] {

    --cell-size: calc(var(--spacing) * 8);
  }

  .running {

    animation-play-state: running;
  }

  .group-focus-within\/menu-item\:opacity-100 {

    &:is(:where(.group\/menu-item):focus-within *) {

      opacity: 100%;
    }
  }

  .group-hover\:bg-purple-500\/30 {

    &:is(:where(.group):hover *) {

      @media (hover: hover) {

        background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(62.7% 0.265 303.9) 30%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
          }
}
      }
    }
  }

  .group-hover\:bg-success\/30 {

    &:is(:where(.group):hover *) {

      @media (hover: hover) {

        background-color: oklch(0.7 0.18 160);

        background-color: var(--success);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.7 0.18 160) 30%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--success) 30%, transparent);
          }
}
      }
    }
  }

  .group-hover\:bg-warning\/30 {

    &:is(:where(.group):hover *) {

      @media (hover: hover) {

        background-color: oklch(0.75 0.2 50);

        background-color: var(--warning);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.75 0.2 50) 30%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--warning) 30%, transparent);
          }
}
      }
    }
  }

  .group-hover\:opacity-100 {

    &:is(:where(.group):hover *) {

      @media (hover: hover) {

        opacity: 100%;
      }
    }
  }

  .group-hover\/menu-item\:opacity-100 {

    &:is(:where(.group\/menu-item):hover *) {

      @media (hover: hover) {

        opacity: 100%;
      }
    }
  }

  .group-has-data-\[sidebar\=menu-action\]\/menu-item\:pr-8 {

    &:is(:where(.group\/menu-item):has(*[data-sidebar="menu-action"]) *) {

      padding-right: calc(0.25rem * 8);

      padding-right: calc(var(--spacing) * 8);
    }
  }

  .group-data-\[collapsible\=icon\]\:-mt-8 {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      margin-top: calc(0.25rem * -8);

      margin-top: calc(var(--spacing) * -8);
    }
  }

  .group-data-\[collapsible\=icon\]\:hidden {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      display: none;
    }
  }

  .group-data-\[collapsible\=icon\]\:size-8\! {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      width: calc(0.25rem * 8) !important;

      width: calc(var(--spacing) * 8) !important;

      height: calc(0.25rem * 8) !important;

      height: calc(var(--spacing) * 8) !important;
    }
  }

  .group-data-\[collapsible\=icon\]\:w-\(--sidebar-width-icon\) {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      width: var(--sidebar-width-icon);
    }
  }

  .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)\+\(--spacing\(4\)\)\)\] {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      width: calc(var(--sidebar-width-icon) + (calc(0.25rem * 4)));

      width: calc(var(--sidebar-width-icon) + (calc(var(--spacing) * 4)));
    }
  }

  .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)\+\(--spacing\(4\)\)\+2px\)\] {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      width: calc(var(--sidebar-width-icon) + (calc(0.25rem * 4)) + 2px);

      width: calc(var(--sidebar-width-icon) + (calc(var(--spacing) * 4)) + 2px);
    }
  }

  .group-data-\[collapsible\=icon\]\:overflow-hidden {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      overflow: hidden;
    }
  }

  .group-data-\[collapsible\=icon\]\:p-0\! {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      padding: calc(0.25rem * 0) !important;

      padding: calc(var(--spacing) * 0) !important;
    }
  }

  .group-data-\[collapsible\=icon\]\:p-2\! {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      padding: calc(0.25rem * 2) !important;

      padding: calc(var(--spacing) * 2) !important;
    }
  }

  .group-data-\[collapsible\=icon\]\:opacity-0 {

    &:is(:where(.group)[data-collapsible="icon"] *) {

      opacity: 0%;
    }
  }

  .group-data-\[collapsible\=offcanvas\]\:right-\[calc\(var\(--sidebar-width\)\*-1\)\] {

    &:is(:where(.group)[data-collapsible="offcanvas"] *) {

      right: calc(var(--sidebar-width) * -1);
    }
  }

  .group-data-\[collapsible\=offcanvas\]\:left-\[calc\(var\(--sidebar-width\)\*-1\)\] {

    &:is(:where(.group)[data-collapsible="offcanvas"] *) {

      left: calc(var(--sidebar-width) * -1);
    }
  }

  .group-data-\[collapsible\=offcanvas\]\:w-0 {

    &:is(:where(.group)[data-collapsible="offcanvas"] *) {

      width: calc(0.25rem * 0);

      width: calc(var(--spacing) * 0);
    }
  }

  .group-data-\[collapsible\=offcanvas\]\:translate-x-0 {

    &:is(:where(.group)[data-collapsible="offcanvas"] *) {

      --tw-translate-x: calc(var(--spacing) * 0);

      translate: calc(0.25rem * 0) var(--tw-translate-y);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .group-data-\[focused\=true\]\/day\:relative {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      position: relative;
    }
  }

  .group-data-\[focused\=true\]\/day\:z-10 {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      z-index: 10;
    }
  }

  .group-data-\[focused\=true\]\/day\:border-ring {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      border-color: oklch(0.65 0.25 250);

      border-color: var(--ring);
    }
  }

  .group-data-\[focused\=true\]\/day\:ring-\[3px\] {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .group-data-\[focused\=true\]\/day\:ring-ring\/50 {

    &:is(:where(.group\/day)[data-focused="true"] *) {

      --tw-ring-color: var(--ring);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }

  .group-data-\[side\=left\]\:-right-4 {

    &:is(:where(.group)[data-side="left"] *) {

      right: calc(0.25rem * -4);

      right: calc(var(--spacing) * -4);
    }
  }

  .group-data-\[side\=left\]\:border-r {

    &:is(:where(.group)[data-side="left"] *) {

      border-right-style: var(--tw-border-style);

      border-right-width: 1px;
    }
  }

  .group-data-\[side\=right\]\:left-0 {

    &:is(:where(.group)[data-side="right"] *) {

      left: calc(0.25rem * 0);

      left: calc(var(--spacing) * 0);
    }
  }

  .group-data-\[side\=right\]\:rotate-180 {

    &:is(:where(.group)[data-side="right"] *) {

      rotate: 180deg;
    }
  }

  .group-data-\[side\=right\]\:border-l {

    &:is(:where(.group)[data-side="right"] *) {

      border-left-style: var(--tw-border-style);

      border-left-width: 1px;
    }
  }

  .group-data-\[state\=open\]\:rotate-180 {

    &:is(:where(.group)[data-state="open"] *) {

      rotate: 180deg;
    }
  }

  .group-data-\[variant\=floating\]\:rounded-lg {

    &:is(:where(.group)[data-variant="floating"] *) {

      border-radius: 0.75rem;

      border-radius: var(--radius);
    }
  }

  .group-data-\[variant\=floating\]\:border {

    &:is(:where(.group)[data-variant="floating"] *) {

      border-style: var(--tw-border-style);

      border-width: 1px;
    }
  }

  .group-data-\[variant\=floating\]\:border-sidebar-border {

    &:is(:where(.group)[data-variant="floating"] *) {

      border-color: oklch(0.88 0.03 280);

      border-color: var(--sidebar-border);
    }
  }

  .group-data-\[variant\=floating\]\:shadow-sm {

    &:is(:where(.group)[data-variant="floating"] *) {

      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .group-data-\[vaul-drawer-direction\=bottom\]\/drawer-content\:block {

    &:is(:where(.group\/drawer-content)[data-vaul-drawer-direction="bottom"] *) {

      display: block;
    }
  }

  .group-data-\[vaul-drawer-direction\=bottom\]\/drawer-content\:text-center {

    &:is(:where(.group\/drawer-content)[data-vaul-drawer-direction="bottom"] *) {

      text-align: center;
    }
  }

  .group-data-\[vaul-drawer-direction\=top\]\/drawer-content\:text-center {

    &:is(:where(.group\/drawer-content)[data-vaul-drawer-direction="top"] *) {

      text-align: center;
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:top-full {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      top: 100%;
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:mt-1\.5 {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      margin-top: calc(0.25rem * 1.5);

      margin-top: calc(var(--spacing) * 1.5);
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:overflow-hidden {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      overflow: hidden;
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:rounded-md {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      border-radius: calc(0.75rem - 2px);

      border-radius: calc(var(--radius) - 2px);
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:border {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      border-style: var(--tw-border-style);

      border-width: 1px;
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:bg-popover {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      background-color: oklch(0.98 0.01 120);

      background-color: var(--popover);
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:text-popover-foreground {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      color: oklch(0.15 0.02 280);

      color: var(--popover-foreground);
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:shadow {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:duration-200 {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      --tw-duration: 200ms;

      transition-duration: 200ms;
    }
  }

  .group-\[\.destructive\]\:border-muted\/40 {

    &:is(:where(.group):is(.destructive) *) {

      border-color: oklch(0.94 0.02 280);

      border-color: var(--muted);

      @supports (color: color-mix(in lab, red, red)) {

        border-color: color-mix(in oklab, oklch(0.94 0.02 280) 40%, transparent);
      }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

          border-color: color-mix(in oklab, var(--muted) 40%, transparent);
        }
}
    }
  }

  .group-\[\.destructive\]\:text-red-300 {

    &:is(:where(.group):is(.destructive) *) {

      color: oklch(80.8% 0.114 19.571);

      color: var(--color-red-300);
    }
  }

  .peer-hover\/menu-button\:text-sidebar-accent-foreground {

    &:is(:where(.peer\/menu-button):hover ~ *) {

      @media (hover: hover) {

        color: oklch(0.15 0.02 280);

        color: var(--sidebar-accent-foreground);
      }
    }
  }

  .peer-disabled\:cursor-not-allowed {

    &:is(:where(.peer):disabled ~ *) {

      cursor: not-allowed;
    }
  }

  .peer-disabled\:opacity-70 {

    &:is(:where(.peer):disabled ~ *) {

      opacity: 70%;
    }
  }

  .peer-data-\[active\=true\]\/menu-button\:text-sidebar-accent-foreground {

    &:is(:where(.peer\/menu-button)[data-active="true"] ~ *) {

      color: oklch(0.15 0.02 280);

      color: var(--sidebar-accent-foreground);
    }
  }

  .peer-data-\[size\=default\]\/menu-button\:top-1\.5 {

    &:is(:where(.peer\/menu-button)[data-size="default"] ~ *) {

      top: calc(0.25rem * 1.5);

      top: calc(var(--spacing) * 1.5);
    }
  }

  .peer-data-\[size\=lg\]\/menu-button\:top-2\.5 {

    &:is(:where(.peer\/menu-button)[data-size="lg"] ~ *) {

      top: calc(0.25rem * 2.5);

      top: calc(var(--spacing) * 2.5);
    }
  }

  .peer-data-\[size\=sm\]\/menu-button\:top-1 {

    &:is(:where(.peer\/menu-button)[data-size="sm"] ~ *) {

      top: calc(0.25rem * 1);

      top: calc(var(--spacing) * 1);
    }
  }

  .file\:border-0 {

    &::file-selector-button {

      border-style: var(--tw-border-style);

      border-width: 0px;
    }
  }

  .file\:bg-transparent {

    &::file-selector-button {

      background-color: transparent;
    }
  }

  .file\:text-sm {

    &::file-selector-button {

      font-size: 0.875rem;

      font-size: var(--text-sm);

      line-height: calc(1.25 / 0.875);

      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  .file\:font-medium {

    &::file-selector-button {

      --tw-font-weight: var(--font-weight-medium);

      font-weight: 500;

      font-weight: var(--font-weight-medium);
    }
  }

  .placeholder\:text-muted-foreground {

    &::-moz-placeholder {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }

    &::placeholder {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }
  }

  .after\:absolute {

    &::after {

      content: var(--tw-content);

      position: absolute;
    }
  }

  .after\:-inset-2 {

    &::after {

      content: var(--tw-content);

      inset: calc(0.25rem * -2);

      inset: calc(var(--spacing) * -2);
    }
  }

  .after\:inset-y-0 {

    &::after {

      content: var(--tw-content);

      inset-block: calc(0.25rem * 0);

      inset-block: calc(var(--spacing) * 0);
    }
  }

  .after\:left-1\/2 {

    &::after {

      content: var(--tw-content);

      left: calc(1/2 * 100%);
    }
  }

  .after\:w-1 {

    &::after {

      content: var(--tw-content);

      width: calc(0.25rem * 1);

      width: calc(var(--spacing) * 1);
    }
  }

  .after\:w-\[2px\] {

    &::after {

      content: var(--tw-content);

      width: 2px;
    }
  }

  .after\:-translate-x-1\/2 {

    &::after {

      content: var(--tw-content);

      --tw-translate-x: calc(calc(1/2 * 100%) * -1);

      translate: calc(calc(1/2 * 100%) * -1) var(--tw-translate-y);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .group-data-\[collapsible\=offcanvas\]\:after\:left-full {

    &:is(:where(.group)[data-collapsible="offcanvas"] *) {

      &::after {

        content: var(--tw-content);

        left: 100%;
      }
    }
  }

  .first\:rounded-l-md {

    &:first-child {

      border-top-left-radius: calc(0.75rem - 2px);

      border-top-left-radius: calc(var(--radius) - 2px);

      border-bottom-left-radius: calc(0.75rem - 2px);

      border-bottom-left-radius: calc(var(--radius) - 2px);
    }
  }

  .first\:border-l {

    &:first-child {

      border-left-style: var(--tw-border-style);

      border-left-width: 1px;
    }
  }

  .last\:rounded-r-md {

    &:last-child {

      border-top-right-radius: calc(0.75rem - 2px);

      border-top-right-radius: calc(var(--radius) - 2px);

      border-bottom-right-radius: calc(0.75rem - 2px);

      border-bottom-right-radius: calc(var(--radius) - 2px);
    }
  }

  .last\:border-b-0 {

    &:last-child {

      border-bottom-style: var(--tw-border-style);

      border-bottom-width: 0px;
    }
  }

  .hover\:scale-110 {

    &:hover {

      @media (hover: hover) {

        --tw-scale-x: 110%;

        --tw-scale-y: 110%;

        --tw-scale-z: 110%;

        scale: 110% 110%;

        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }

  .hover\:border-primary\/50 {

    &:hover {

      @media (hover: hover) {

        border-color: oklch(0.65 0.25 250);

        border-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {

          border-color: color-mix(in oklab, oklch(0.65 0.25 250) 50%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            border-color: color-mix(in oklab, var(--primary) 50%, transparent);
          }
}
      }
    }
  }

  .hover\:border-warning\/50 {

    &:hover {

      @media (hover: hover) {

        border-color: oklch(0.75 0.2 50);

        border-color: var(--warning);

        @supports (color: color-mix(in lab, red, red)) {

          border-color: color-mix(in oklab, oklch(0.75 0.2 50) 50%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            border-color: color-mix(in oklab, var(--warning) 50%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-accent {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.8 0.15 320);

        background-color: var(--accent);
      }
    }
  }

  .hover\:bg-destructive\/30 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.6 0.25 25);

        background-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.6 0.25 25) 30%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--destructive) 30%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-destructive\/80 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.6 0.25 25);

        background-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.6 0.25 25) 80%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--destructive) 80%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-destructive\/90 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.6 0.25 25);

        background-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.6 0.25 25) 90%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-muted {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.94 0.02 280);

        background-color: var(--muted);
      }
    }
  }

  .hover\:bg-muted\/50 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.94 0.02 280);

        background-color: var(--muted);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.94 0.02 280) 50%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--muted) 50%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-primary\/10 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.65 0.25 250);

        background-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.65 0.25 250) 10%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--primary) 10%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-primary\/80 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.65 0.25 250);

        background-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.65 0.25 250) 80%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--primary) 80%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-primary\/90 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.65 0.25 250);

        background-color: var(--primary);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.65 0.25 250) 90%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--primary) 90%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-secondary {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.85 0.08 300);

        background-color: var(--secondary);
      }
    }
  }

  .hover\:bg-secondary\/80 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.85 0.08 300);

        background-color: var(--secondary);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.85 0.08 300) 80%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-sidebar-accent {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.85 0.08 300);

        background-color: var(--sidebar-accent);
      }
    }
  }

  .hover\:bg-success\/30 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.7 0.18 160);

        background-color: var(--success);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.7 0.18 160) 30%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--success) 30%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-success\/90 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.7 0.18 160);

        background-color: var(--success);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.7 0.18 160) 90%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--success) 90%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-warning\/30 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.75 0.2 50);

        background-color: var(--warning);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.75 0.2 50) 30%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--warning) 30%, transparent);
          }
}
      }
    }
  }

  .hover\:bg-warning\/90 {

    &:hover {

      @media (hover: hover) {

        background-color: oklch(0.75 0.2 50);

        background-color: var(--warning);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.75 0.2 50) 90%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--warning) 90%, transparent);
          }
}
      }
    }
  }

  .hover\:from-destructive\/90 {

    &:hover {

      @media (hover: hover) {

        --tw-gradient-from: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-gradient-from: color-mix(in oklab, var(--destructive) 90%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }

  .hover\:from-success\/90 {

    &:hover {

      @media (hover: hover) {

        --tw-gradient-from: var(--success);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-gradient-from: color-mix(in oklab, var(--success) 90%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }

  .hover\:to-destructive\/70 {

    &:hover {

      @media (hover: hover) {

        --tw-gradient-to: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-gradient-to: color-mix(in oklab, var(--destructive) 70%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }

  .hover\:to-success\/70 {

    &:hover {

      @media (hover: hover) {

        --tw-gradient-to: var(--success);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-gradient-to: color-mix(in oklab, var(--success) 70%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }

  .hover\:text-accent-foreground {

    &:hover {

      @media (hover: hover) {

        color: oklch(0.15 0.02 280);

        color: var(--accent-foreground);
      }
    }
  }

  .hover\:text-foreground {

    &:hover {

      @media (hover: hover) {

        color: oklch(0.15 0.02 280);

        color: var(--foreground);
      }
    }
  }

  .hover\:text-muted-foreground {

    &:hover {

      @media (hover: hover) {

        color: oklch(0.5 0.05 280);

        color: var(--muted-foreground);
      }
    }
  }

  .hover\:text-primary {

    &:hover {

      @media (hover: hover) {

        color: oklch(0.65 0.25 250);

        color: var(--primary);
      }
    }
  }

  .hover\:text-sidebar-accent-foreground {

    &:hover {

      @media (hover: hover) {

        color: oklch(0.15 0.02 280);

        color: var(--sidebar-accent-foreground);
      }
    }
  }

  .hover\:underline {

    &:hover {

      @media (hover: hover) {

        text-decoration-line: underline;
      }
    }
  }

  .hover\:opacity-100 {

    &:hover {

      @media (hover: hover) {

        opacity: 100%;
      }
    }
  }

  .hover\:shadow-2xl {

    &:hover {

      @media (hover: hover) {

        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 25px 50px -12px rgb(0 0 0 / 0.25);

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }

  .hover\:shadow-\[0_0_0_1px_hsl\(var\(--sidebar-accent\)\)\] {

    &:hover {

      @media (hover: hover) {

        --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-accent)));

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 0 0 1px hsl(oklch(0.85 0.08 300));

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }

  .hover\:shadow-lg {

    &:hover {

      @media (hover: hover) {

        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }

  .hover\:shadow-xl {

    &:hover {

      @media (hover: hover) {

        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }

  .hover\:ring-4 {

    &:hover {

      @media (hover: hover) {

        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }

  .hover\:group-data-\[collapsible\=offcanvas\]\:bg-sidebar {

    &:hover {

      @media (hover: hover) {

        &:is(:where(.group)[data-collapsible="offcanvas"] *) {

          background-color: oklch(0.97 0.01 280);

          background-color: var(--sidebar);
        }
      }
    }
  }

  .group-\[\.destructive\]\:hover\:border-destructive\/30 {

    &:is(:where(.group):is(.destructive) *) {

      &:hover {

        @media (hover: hover) {

          border-color: oklch(0.6 0.25 25);

          border-color: var(--destructive);

          @supports (color: color-mix(in lab, red, red)) {

            border-color: color-mix(in oklab, oklch(0.6 0.25 25) 30%, transparent);
          }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

              border-color: color-mix(in oklab, var(--destructive) 30%, transparent);
            }
}
        }
      }
    }
  }

  .group-\[\.destructive\]\:hover\:bg-destructive {

    &:is(:where(.group):is(.destructive) *) {

      &:hover {

        @media (hover: hover) {

          background-color: oklch(0.6 0.25 25);

          background-color: var(--destructive);
        }
      }
    }
  }

  .group-\[\.destructive\]\:hover\:text-destructive-foreground {

    &:is(:where(.group):is(.destructive) *) {

      &:hover {

        @media (hover: hover) {

          color: oklch(0.98 0.01 120);

          color: var(--destructive-foreground);
        }
      }
    }
  }

  .group-\[\.destructive\]\:hover\:text-red-50 {

    &:is(:where(.group):is(.destructive) *) {

      &:hover {

        @media (hover: hover) {

          color: oklch(97.1% 0.013 17.38);

          color: var(--color-red-50);
        }
      }
    }
  }

  .hover\:after\:bg-sidebar-border {

    &:hover {

      @media (hover: hover) {

        &::after {

          content: var(--tw-content);

          background-color: oklch(0.88 0.03 280);

          background-color: var(--sidebar-border);
        }
      }
    }
  }

  .focus\:z-10 {

    &:focus {

      z-index: 10;
    }
  }

  .focus\:bg-accent {

    &:focus {

      background-color: oklch(0.8 0.15 320);

      background-color: var(--accent);
    }
  }

  .focus\:text-accent-foreground {

    &:focus {

      color: oklch(0.15 0.02 280);

      color: var(--accent-foreground);
    }
  }

  .focus\:opacity-100 {

    &:focus {

      opacity: 100%;
    }
  }

  .focus\:ring-2 {

    &:focus {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:ring-ring {

    &:focus {

      --tw-ring-color: var(--ring);
    }
  }

  .focus\:ring-offset-2 {

    &:focus {

      --tw-ring-offset-width: 2px;

      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }

  .focus\:outline-hidden {

    &:focus {

      --tw-outline-style: none;

      outline-style: none;

      @media (forced-colors: active) {

        outline: 2px solid transparent;

        outline-offset: 2px;
      }
    }
  }

  .focus\:outline-none {

    &:focus {

      --tw-outline-style: none;

      outline-style: none;
    }
  }

  .group-\[\.destructive\]\:focus\:ring-destructive {

    &:is(:where(.group):is(.destructive) *) {

      &:focus {

        --tw-ring-color: var(--destructive);
      }
    }
  }

  .group-\[\.destructive\]\:focus\:ring-red-400 {

    &:is(:where(.group):is(.destructive) *) {

      &:focus {

        --tw-ring-color: var(--color-red-400);
      }
    }
  }

  .group-\[\.destructive\]\:focus\:ring-offset-red-600 {

    &:is(:where(.group):is(.destructive) *) {

      &:focus {

        --tw-ring-offset-color: var(--color-red-600);
      }
    }
  }

  .focus-visible\:z-10 {

    &:focus-visible {

      z-index: 10;
    }
  }

  .focus-visible\:border-ring {

    &:focus-visible {

      border-color: oklch(0.65 0.25 250);

      border-color: var(--ring);
    }
  }

  .focus-visible\:ring-1 {

    &:focus-visible {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus-visible\:ring-2 {

    &:focus-visible {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus-visible\:ring-4 {

    &:focus-visible {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus-visible\:ring-\[3px\] {

    &:focus-visible {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus-visible\:ring-destructive\/20 {

    &:focus-visible {

      --tw-ring-color: var(--destructive);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }

  .focus-visible\:ring-ring {

    &:focus-visible {

      --tw-ring-color: var(--ring);
    }
  }

  .focus-visible\:ring-ring\/50 {

    &:focus-visible {

      --tw-ring-color: var(--ring);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }

  .focus-visible\:ring-offset-1 {

    &:focus-visible {

      --tw-ring-offset-width: 1px;

      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }

  .focus-visible\:ring-offset-2 {

    &:focus-visible {

      --tw-ring-offset-width: 2px;

      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }

  .focus-visible\:ring-offset-background {

    &:focus-visible {

      --tw-ring-offset-color: var(--background);
    }
  }

  .focus-visible\:outline-hidden {

    &:focus-visible {

      --tw-outline-style: none;

      outline-style: none;

      @media (forced-colors: active) {

        outline: 2px solid transparent;

        outline-offset: 2px;
      }
    }
  }

  .focus-visible\:outline-1 {

    &:focus-visible {

      outline-style: var(--tw-outline-style);

      outline-width: 1px;
    }
  }

  .focus-visible\:outline-ring {

    &:focus-visible {

      outline-color: oklch(0.65 0.25 250);

      outline-color: var(--ring);
    }
  }

  .focus-visible\:outline-none {

    &:focus-visible {

      --tw-outline-style: none;

      outline-style: none;
    }
  }

  .active\:bg-sidebar-accent {

    &:active {

      background-color: oklch(0.85 0.08 300);

      background-color: var(--sidebar-accent);
    }
  }

  .active\:text-sidebar-accent-foreground {

    &:active {

      color: oklch(0.15 0.02 280);

      color: var(--sidebar-accent-foreground);
    }
  }

  .disabled\:pointer-events-none {

    &:disabled {

      pointer-events: none;
    }
  }

  .disabled\:cursor-not-allowed {

    &:disabled {

      cursor: not-allowed;
    }
  }

  .disabled\:opacity-50 {

    &:disabled {

      opacity: 50%;
    }
  }

  .in-data-\[side\=left\]\:cursor-w-resize {

    :where(*[data-side="left"]) & {

      cursor: w-resize;
    }
  }

  .in-data-\[side\=right\]\:cursor-e-resize {

    :where(*[data-side="right"]) & {

      cursor: e-resize;
    }
  }

  .has-focus\:border-ring {

    &:has(*:focus) {

      border-color: oklch(0.65 0.25 250);

      border-color: var(--ring);
    }
  }

  .has-focus\:ring-\[3px\] {

    &:has(*:focus) {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .has-focus\:ring-ring\/50 {

    &:has(*:focus) {

      --tw-ring-color: var(--ring);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }

  .has-disabled\:opacity-50 {

    &:has(*:disabled) {

      opacity: 50%;
    }
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\] {

    &:has(*[data-slot="card-action"]) {

      grid-template-columns: 1fr auto;
    }
  }

  .has-data-\[variant\=inset\]\:bg-sidebar {

    &:has(*[data-variant="inset"]) {

      background-color: oklch(0.97 0.01 280);

      background-color: var(--sidebar);
    }
  }

  .has-\[\>svg\]\:grid-cols-\[calc\(var\(--spacing\)\*4\)_1fr\] {

    &:has(>svg) {

      grid-template-columns: calc(0.25rem * 4) 1fr;

      grid-template-columns: calc(var(--spacing) * 4) 1fr;
    }
  }

  .has-\[\>svg\]\:gap-x-3 {

    &:has(>svg) {

      -moz-column-gap: calc(0.25rem * 3);

           column-gap: calc(0.25rem * 3);

      -moz-column-gap: calc(var(--spacing) * 3);

           column-gap: calc(var(--spacing) * 3);
    }
  }

  .has-\[\>svg\]\:px-2\.5 {

    &:has(>svg) {

      padding-inline: calc(0.25rem * 2.5);

      padding-inline: calc(var(--spacing) * 2.5);
    }
  }

  .has-\[\>svg\]\:px-3 {

    &:has(>svg) {

      padding-inline: calc(0.25rem * 3);

      padding-inline: calc(var(--spacing) * 3);
    }
  }

  .has-\[\>svg\]\:px-4 {

    &:has(>svg) {

      padding-inline: calc(0.25rem * 4);

      padding-inline: calc(var(--spacing) * 4);
    }
  }

  .aria-disabled\:pointer-events-none {

    &[aria-disabled="true"] {

      pointer-events: none;
    }
  }

  .aria-disabled\:opacity-50 {

    &[aria-disabled="true"] {

      opacity: 50%;
    }
  }

  .aria-invalid\:border-destructive {

    &[aria-invalid="true"] {

      border-color: oklch(0.6 0.25 25);

      border-color: var(--destructive);
    }
  }

  .aria-invalid\:ring-destructive\/20 {

    &[aria-invalid="true"] {

      --tw-ring-color: var(--destructive);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }

  .aria-selected\:text-muted-foreground {

    &[aria-selected="true"] {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }
  }

  .data-\[active\=true\]\:z-10 {

    &[data-active="true"] {

      z-index: 10;
    }
  }

  .data-\[active\=true\]\:border-ring {

    &[data-active="true"] {

      border-color: oklch(0.65 0.25 250);

      border-color: var(--ring);
    }
  }

  .data-\[active\=true\]\:bg-accent\/50 {

    &[data-active="true"] {

      background-color: oklch(0.8 0.15 320);

      background-color: var(--accent);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, oklch(0.8 0.15 320) 50%, transparent);
      }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--accent) 50%, transparent);
        }
}
    }
  }

  .data-\[active\=true\]\:bg-sidebar-accent {

    &[data-active="true"] {

      background-color: oklch(0.85 0.08 300);

      background-color: var(--sidebar-accent);
    }
  }

  .data-\[active\=true\]\:font-medium {

    &[data-active="true"] {

      --tw-font-weight: var(--font-weight-medium);

      font-weight: 500;

      font-weight: var(--font-weight-medium);
    }
  }

  .data-\[active\=true\]\:text-accent-foreground {

    &[data-active="true"] {

      color: oklch(0.15 0.02 280);

      color: var(--accent-foreground);
    }
  }

  .data-\[active\=true\]\:text-sidebar-accent-foreground {

    &[data-active="true"] {

      color: oklch(0.15 0.02 280);

      color: var(--sidebar-accent-foreground);
    }
  }

  .data-\[active\=true\]\:ring-\[3px\] {

    &[data-active="true"] {

      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .data-\[active\=true\]\:ring-ring\/50 {

    &[data-active="true"] {

      --tw-ring-color: var(--ring);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }

  .data-\[active\=true\]\:hover\:bg-accent {

    &[data-active="true"] {

      &:hover {

        @media (hover: hover) {

          background-color: oklch(0.8 0.15 320);

          background-color: var(--accent);
        }
      }
    }
  }

  .data-\[active\=true\]\:focus\:bg-accent {

    &[data-active="true"] {

      &:focus {

        background-color: oklch(0.8 0.15 320);

        background-color: var(--accent);
      }
    }
  }

  .data-\[active\=true\]\:aria-invalid\:border-destructive {

    &[data-active="true"] {

      &[aria-invalid="true"] {

        border-color: oklch(0.6 0.25 25);

        border-color: var(--destructive);
      }
    }
  }

  .data-\[active\=true\]\:aria-invalid\:ring-destructive\/20 {

    &[data-active="true"] {

      &[aria-invalid="true"] {

        --tw-ring-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
      }
    }
  }

  .data-\[disabled\]\:pointer-events-none {

    &[data-disabled] {

      pointer-events: none;
    }
  }

  .data-\[disabled\]\:opacity-50 {

    &[data-disabled] {

      opacity: 50%;
    }
  }

  .data-\[disabled\=true\]\:pointer-events-none {

    &[data-disabled="true"] {

      pointer-events: none;
    }
  }

  .data-\[disabled\=true\]\:opacity-50 {

    &[data-disabled="true"] {

      opacity: 50%;
    }
  }

  .data-\[error\=true\]\:text-destructive {

    &[data-error="true"] {

      color: oklch(0.6 0.25 25);

      color: var(--destructive);
    }
  }

  .data-\[inset\]\:pl-8 {

    &[data-inset] {

      padding-left: calc(0.25rem * 8);

      padding-left: calc(var(--spacing) * 8);
    }
  }

  .data-\[motion\=from-end\]\:slide-in-from-right-52 {

    &[data-motion="from-end"] {

      --tw-enter-translate-x: calc(52*var(--spacing));
    }
  }

  .data-\[motion\=from-start\]\:slide-in-from-left-52 {

    &[data-motion="from-start"] {

      --tw-enter-translate-x: calc(52*var(--spacing)*-1);
    }
  }

  .data-\[motion\=to-end\]\:slide-out-to-right-52 {

    &[data-motion="to-end"] {

      --tw-exit-translate-x: calc(52*var(--spacing));
    }
  }

  .data-\[motion\=to-start\]\:slide-out-to-left-52 {

    &[data-motion="to-start"] {

      --tw-exit-translate-x: calc(52*var(--spacing)*-1);
    }
  }

  .data-\[motion\^\=from-\]\:animate-in {

    &[data-motion^="from-"] {

      animation: enter .15sease0s1normalforwards;

      animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
    }
  }

  .data-\[motion\^\=from-\]\:fade-in {

    &[data-motion^="from-"] {

      --tw-enter-opacity: 0;
    }
  }

  .data-\[motion\^\=to-\]\:animate-out {

    &[data-motion^="to-"] {

      animation: exit .15sease0s1normalforwards;

      animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
    }
  }

  .data-\[motion\^\=to-\]\:fade-out {

    &[data-motion^="to-"] {

      --tw-exit-opacity: 0;
    }
  }

  .data-\[orientation\=horizontal\]\:h-1\.5 {

    &[data-orientation="horizontal"] {

      height: calc(0.25rem * 1.5);

      height: calc(var(--spacing) * 1.5);
    }
  }

  .data-\[orientation\=horizontal\]\:h-full {

    &[data-orientation="horizontal"] {

      height: 100%;
    }
  }

  .data-\[orientation\=horizontal\]\:w-full {

    &[data-orientation="horizontal"] {

      width: 100%;
    }
  }

  .data-\[orientation\=vertical\]\:h-full {

    &[data-orientation="vertical"] {

      height: 100%;
    }
  }

  .data-\[orientation\=vertical\]\:min-h-44 {

    &[data-orientation="vertical"] {

      min-height: calc(0.25rem * 44);

      min-height: calc(var(--spacing) * 44);
    }
  }

  .data-\[orientation\=vertical\]\:w-1\.5 {

    &[data-orientation="vertical"] {

      width: calc(0.25rem * 1.5);

      width: calc(var(--spacing) * 1.5);
    }
  }

  .data-\[orientation\=vertical\]\:w-auto {

    &[data-orientation="vertical"] {

      width: auto;
    }
  }

  .data-\[orientation\=vertical\]\:w-full {

    &[data-orientation="vertical"] {

      width: 100%;
    }
  }

  .data-\[orientation\=vertical\]\:flex-col {

    &[data-orientation="vertical"] {

      flex-direction: column;
    }
  }

  .data-\[panel-group-direction\=vertical\]\:h-px {

    &[data-panel-group-direction="vertical"] {

      height: 1px;
    }
  }

  .data-\[panel-group-direction\=vertical\]\:w-full {

    &[data-panel-group-direction="vertical"] {

      width: 100%;
    }
  }

  .data-\[panel-group-direction\=vertical\]\:flex-col {

    &[data-panel-group-direction="vertical"] {

      flex-direction: column;
    }
  }

  .data-\[panel-group-direction\=vertical\]\:after\:left-0 {

    &[data-panel-group-direction="vertical"] {

      &::after {

        content: var(--tw-content);

        left: calc(0.25rem * 0);

        left: calc(var(--spacing) * 0);
      }
    }
  }

  .data-\[panel-group-direction\=vertical\]\:after\:h-1 {

    &[data-panel-group-direction="vertical"] {

      &::after {

        content: var(--tw-content);

        height: calc(0.25rem * 1);

        height: calc(var(--spacing) * 1);
      }
    }
  }

  .data-\[panel-group-direction\=vertical\]\:after\:w-full {

    &[data-panel-group-direction="vertical"] {

      &::after {

        content: var(--tw-content);

        width: 100%;
      }
    }
  }

  .data-\[panel-group-direction\=vertical\]\:after\:translate-x-0 {

    &[data-panel-group-direction="vertical"] {

      &::after {

        content: var(--tw-content);

        --tw-translate-x: calc(var(--spacing) * 0);

        translate: calc(0.25rem * 0) var(--tw-translate-y);

        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }

  .data-\[panel-group-direction\=vertical\]\:after\:-translate-y-1\/2 {

    &[data-panel-group-direction="vertical"] {

      &::after {

        content: var(--tw-content);

        --tw-translate-y: calc(calc(1/2 * 100%) * -1);

        translate: var(--tw-translate-x) calc(calc(1/2 * 100%) * -1);

        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }

  .data-\[range-end\=true\]\:rounded-md {

    &[data-range-end="true"] {

      border-radius: calc(0.75rem - 2px);

      border-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-end\=true\]\:rounded-r-md {

    &[data-range-end="true"] {

      border-top-right-radius: calc(0.75rem - 2px);

      border-top-right-radius: calc(var(--radius) - 2px);

      border-bottom-right-radius: calc(0.75rem - 2px);

      border-bottom-right-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-end\=true\]\:bg-primary {

    &[data-range-end="true"] {

      background-color: oklch(0.65 0.25 250);

      background-color: var(--primary);
    }
  }

  .data-\[range-end\=true\]\:text-primary-foreground {

    &[data-range-end="true"] {

      color: oklch(0.98 0.01 120);

      color: var(--primary-foreground);
    }
  }

  .data-\[range-middle\=true\]\:rounded-none {

    &[data-range-middle="true"] {

      border-radius: 0;
    }
  }

  .data-\[range-middle\=true\]\:bg-accent {

    &[data-range-middle="true"] {

      background-color: oklch(0.8 0.15 320);

      background-color: var(--accent);
    }
  }

  .data-\[range-middle\=true\]\:text-accent-foreground {

    &[data-range-middle="true"] {

      color: oklch(0.15 0.02 280);

      color: var(--accent-foreground);
    }
  }

  .data-\[range-start\=true\]\:rounded-md {

    &[data-range-start="true"] {

      border-radius: calc(0.75rem - 2px);

      border-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-start\=true\]\:rounded-l-md {

    &[data-range-start="true"] {

      border-top-left-radius: calc(0.75rem - 2px);

      border-top-left-radius: calc(var(--radius) - 2px);

      border-bottom-left-radius: calc(0.75rem - 2px);

      border-bottom-left-radius: calc(var(--radius) - 2px);
    }
  }

  .data-\[range-start\=true\]\:bg-primary {

    &[data-range-start="true"] {

      background-color: oklch(0.65 0.25 250);

      background-color: var(--primary);
    }
  }

  .data-\[range-start\=true\]\:text-primary-foreground {

    &[data-range-start="true"] {

      color: oklch(0.98 0.01 120);

      color: var(--primary-foreground);
    }
  }

  .data-\[selected-single\=true\]\:bg-primary {

    &[data-selected-single="true"] {

      background-color: oklch(0.65 0.25 250);

      background-color: var(--primary);
    }
  }

  .data-\[selected-single\=true\]\:text-primary-foreground {

    &[data-selected-single="true"] {

      color: oklch(0.98 0.01 120);

      color: var(--primary-foreground);
    }
  }

  .data-\[selected\=true\]\:rounded-none {

    &[data-selected="true"] {

      border-radius: 0;
    }
  }

  .data-\[selected\=true\]\:bg-accent {

    &[data-selected="true"] {

      background-color: oklch(0.8 0.15 320);

      background-color: var(--accent);
    }
  }

  .data-\[selected\=true\]\:text-accent-foreground {

    &[data-selected="true"] {

      color: oklch(0.15 0.02 280);

      color: var(--accent-foreground);
    }
  }

  .data-\[side\=bottom\]\:translate-y-1 {

    &[data-side="bottom"] {

      --tw-translate-y: calc(var(--spacing) * 1);

      translate: var(--tw-translate-x) calc(0.25rem * 1);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2 {

    &[data-side="bottom"] {

      --tw-enter-translate-y: calc(2*var(--spacing)*-1);
    }
  }

  .data-\[side\=left\]\:-translate-x-1 {

    &[data-side="left"] {

      --tw-translate-x: calc(var(--spacing) * -1);

      translate: calc(0.25rem * -1) var(--tw-translate-y);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[side\=left\]\:slide-in-from-right-2 {

    &[data-side="left"] {

      --tw-enter-translate-x: calc(2*var(--spacing));
    }
  }

  .data-\[side\=right\]\:translate-x-1 {

    &[data-side="right"] {

      --tw-translate-x: calc(var(--spacing) * 1);

      translate: calc(0.25rem * 1) var(--tw-translate-y);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[side\=right\]\:slide-in-from-left-2 {

    &[data-side="right"] {

      --tw-enter-translate-x: calc(2*var(--spacing)*-1);
    }
  }

  .data-\[side\=top\]\:-translate-y-1 {

    &[data-side="top"] {

      --tw-translate-y: calc(var(--spacing) * -1);

      translate: var(--tw-translate-x) calc(0.25rem * -1);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2 {

    &[data-side="top"] {

      --tw-enter-translate-y: calc(2*var(--spacing));
    }
  }

  .\*\:data-\[slot\=alert-description\]\:text-destructive\/90 {

    :is(& > *) {

      &[data-slot="alert-description"] {

        color: oklch(0.6 0.25 25);

        color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          color: color-mix(in oklab, oklch(0.6 0.25 25) 90%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            color: color-mix(in oklab, var(--destructive) 90%, transparent);
          }
}
      }
    }
  }

  .\*\*\:data-\[slot\=command-input-wrapper\]\:h-12 {

    :is(& *) {

      &[data-slot="command-input-wrapper"] {

        height: calc(0.25rem * 12);

        height: calc(var(--spacing) * 12);
      }
    }
  }

  .\*\*\:data-\[slot\=navigation-menu-link\]\:focus\:ring-0 {

    :is(& *) {

      &[data-slot="navigation-menu-link"] {

        &:focus {

          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);

          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }

  .\*\*\:data-\[slot\=navigation-menu-link\]\:focus\:outline-none {

    :is(& *) {

      &[data-slot="navigation-menu-link"] {

        &:focus {

          --tw-outline-style: none;

          outline-style: none;
        }
      }
    }
  }

  .data-\[state\=active\]\:bg-background {

    &[data-state="active"] {

      background-color: oklch(0.99 0.01 120);

      background-color: var(--background);
    }
  }

  .data-\[state\=active\]\:shadow-sm {

    &[data-state="active"] {

      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .data-\[state\=checked\]\:translate-x-5 {

    &[data-state="checked"] {

      --tw-translate-x: calc(var(--spacing) * 5);

      translate: calc(0.25rem * 5) var(--tw-translate-y);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[state\=checked\]\:bg-primary {

    &[data-state="checked"] {

      background-color: oklch(0.65 0.25 250);

      background-color: var(--primary);
    }
  }

  .data-\[state\=checked\]\:text-primary-foreground {

    &[data-state="checked"] {

      color: oklch(0.98 0.01 120);

      color: var(--primary-foreground);
    }
  }

  .data-\[state\=closed\]\:animate-accordion-up {

    &[data-state="closed"] {

      animation: accordion-up .2sease-out;

      animation: accordion-up var(--tw-animation-duration,var(--tw-duration,.2s))ease-out;
    }
  }

  .data-\[state\=closed\]\:animate-out {

    &[data-state="closed"] {

      animation: exit .15sease0s1normalforwards;

      animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
    }
  }

  .data-\[state\=closed\]\:duration-300 {

    &[data-state="closed"] {

      --tw-duration: 300ms;

      transition-duration: 300ms;
    }
  }

  .data-\[state\=closed\]\:fade-out-0 {

    &[data-state="closed"] {

      --tw-exit-opacity: calc(0/100);

      --tw-exit-opacity: 0;
    }
  }

  .data-\[state\=closed\]\:fade-out-80 {

    &[data-state="closed"] {

      --tw-exit-opacity: calc(80/100);

      --tw-exit-opacity: .8;
    }
  }

  .data-\[state\=closed\]\:zoom-out-95 {

    &[data-state="closed"] {

      --tw-exit-scale: calc(95*1%);

      --tw-exit-scale: .95;
    }
  }

  .data-\[state\=closed\]\:slide-out-to-bottom {

    &[data-state="closed"] {

      --tw-exit-translate-y: 100%;
    }
  }

  .data-\[state\=closed\]\:slide-out-to-left {

    &[data-state="closed"] {

      --tw-exit-translate-x: -100%;
    }
  }

  .data-\[state\=closed\]\:slide-out-to-right {

    &[data-state="closed"] {

      --tw-exit-translate-x: 100%;
    }
  }

  .data-\[state\=closed\]\:slide-out-to-right-full {

    &[data-state="closed"] {

      --tw-exit-translate-x: calc(1*100%);
    }
  }

  .data-\[state\=closed\]\:slide-out-to-top {

    &[data-state="closed"] {

      --tw-exit-translate-y: -100%;
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=closed\]\:animate-out {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      &[data-state="closed"] {

        animation: exit .15sease0s1normalforwards;

        animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
      }
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=closed\]\:fade-out-0 {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      &[data-state="closed"] {

        --tw-exit-opacity: calc(0/100);

        --tw-exit-opacity: 0;
      }
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=closed\]\:zoom-out-95 {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      &[data-state="closed"] {

        --tw-exit-scale: calc(95*1%);

        --tw-exit-scale: .95;
      }
    }
  }

  .data-\[state\=hidden\]\:animate-out {

    &[data-state="hidden"] {

      animation: exit .15sease0s1normalforwards;

      animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
    }
  }

  .data-\[state\=hidden\]\:fade-out {

    &[data-state="hidden"] {

      --tw-exit-opacity: 0;
    }
  }

  .data-\[state\=on\]\:bg-accent {

    &[data-state="on"] {

      background-color: oklch(0.8 0.15 320);

      background-color: var(--accent);
    }
  }

  .data-\[state\=on\]\:text-accent-foreground {

    &[data-state="on"] {

      color: oklch(0.15 0.02 280);

      color: var(--accent-foreground);
    }
  }

  .data-\[state\=open\]\:animate-accordion-down {

    &[data-state="open"] {

      animation: accordion-down .2sease-out;

      animation: accordion-down var(--tw-animation-duration,var(--tw-duration,.2s))ease-out;
    }
  }

  .data-\[state\=open\]\:animate-in {

    &[data-state="open"] {

      animation: enter .15sease0s1normalforwards;

      animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
    }
  }

  .data-\[state\=open\]\:bg-accent {

    &[data-state="open"] {

      background-color: oklch(0.8 0.15 320);

      background-color: var(--accent);
    }
  }

  .data-\[state\=open\]\:bg-accent\/50 {

    &[data-state="open"] {

      background-color: oklch(0.8 0.15 320);

      background-color: var(--accent);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, oklch(0.8 0.15 320) 50%, transparent);
      }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--accent) 50%, transparent);
        }
}
    }
  }

  .data-\[state\=open\]\:bg-secondary {

    &[data-state="open"] {

      background-color: oklch(0.85 0.08 300);

      background-color: var(--secondary);
    }
  }

  .data-\[state\=open\]\:text-accent-foreground {

    &[data-state="open"] {

      color: oklch(0.15 0.02 280);

      color: var(--accent-foreground);
    }
  }

  .data-\[state\=open\]\:text-muted-foreground {

    &[data-state="open"] {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }
  }

  .data-\[state\=open\]\:opacity-100 {

    &[data-state="open"] {

      opacity: 100%;
    }
  }

  .data-\[state\=open\]\:duration-500 {

    &[data-state="open"] {

      --tw-duration: 500ms;

      transition-duration: 500ms;
    }
  }

  .data-\[state\=open\]\:fade-in-0 {

    &[data-state="open"] {

      --tw-enter-opacity: calc(0/100);

      --tw-enter-opacity: 0;
    }
  }

  .data-\[state\=open\]\:zoom-in-90 {

    &[data-state="open"] {

      --tw-enter-scale: calc(90*1%);

      --tw-enter-scale: .9;
    }
  }

  .data-\[state\=open\]\:zoom-in-95 {

    &[data-state="open"] {

      --tw-enter-scale: calc(95*1%);

      --tw-enter-scale: .95;
    }
  }

  .data-\[state\=open\]\:slide-in-from-bottom {

    &[data-state="open"] {

      --tw-enter-translate-y: 100%;
    }
  }

  .data-\[state\=open\]\:slide-in-from-left {

    &[data-state="open"] {

      --tw-enter-translate-x: -100%;
    }
  }

  .data-\[state\=open\]\:slide-in-from-right {

    &[data-state="open"] {

      --tw-enter-translate-x: 100%;
    }
  }

  .data-\[state\=open\]\:slide-in-from-top {

    &[data-state="open"] {

      --tw-enter-translate-y: -100%;
    }
  }

  .data-\[state\=open\]\:slide-in-from-top-full {

    &[data-state="open"] {

      --tw-enter-translate-y: calc(1*-100%);
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=open\]\:animate-in {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      &[data-state="open"] {

        animation: enter .15sease0s1normalforwards;

        animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
      }
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=open\]\:fade-in-0 {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      &[data-state="open"] {

        --tw-enter-opacity: calc(0/100);

        --tw-enter-opacity: 0;
      }
    }
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=open\]\:zoom-in-95 {

    &:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {

      &[data-state="open"] {

        --tw-enter-scale: calc(95*1%);

        --tw-enter-scale: .95;
      }
    }
  }

  .data-\[state\=open\]\:hover\:bg-accent {

    &[data-state="open"] {

      &:hover {

        @media (hover: hover) {

          background-color: oklch(0.8 0.15 320);

          background-color: var(--accent);
        }
      }
    }
  }

  .data-\[state\=open\]\:hover\:bg-sidebar-accent {

    &[data-state="open"] {

      &:hover {

        @media (hover: hover) {

          background-color: oklch(0.85 0.08 300);

          background-color: var(--sidebar-accent);
        }
      }
    }
  }

  .data-\[state\=open\]\:hover\:text-sidebar-accent-foreground {

    &[data-state="open"] {

      &:hover {

        @media (hover: hover) {

          color: oklch(0.15 0.02 280);

          color: var(--sidebar-accent-foreground);
        }
      }
    }
  }

  .data-\[state\=open\]\:focus\:bg-accent {

    &[data-state="open"] {

      &:focus {

        background-color: oklch(0.8 0.15 320);

        background-color: var(--accent);
      }
    }
  }

  .data-\[state\=selected\]\:bg-muted {

    &[data-state="selected"] {

      background-color: oklch(0.94 0.02 280);

      background-color: var(--muted);
    }
  }

  .data-\[state\=unchecked\]\:translate-x-0 {

    &[data-state="unchecked"] {

      --tw-translate-x: calc(var(--spacing) * 0);

      translate: calc(0.25rem * 0) var(--tw-translate-y);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[state\=unchecked\]\:bg-input {

    &[data-state="unchecked"] {

      background-color: oklch(0.95 0.02 280);

      background-color: var(--input);
    }
  }

  .data-\[state\=visible\]\:animate-in {

    &[data-state="visible"] {

      animation: enter .15sease0s1normalforwards;

      animation: enter var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
    }
  }

  .data-\[state\=visible\]\:fade-in {

    &[data-state="visible"] {

      --tw-enter-opacity: 0;
    }
  }

  .data-\[swipe\=cancel\]\:translate-x-0 {

    &[data-swipe="cancel"] {

      --tw-translate-x: calc(var(--spacing) * 0);

      translate: calc(0.25rem * 0) var(--tw-translate-y);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\] {

    &[data-swipe="end"] {

      --tw-translate-x: var(--radix-toast-swipe-end-x);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[swipe\=end\]\:animate-out {

    &[data-swipe="end"] {

      animation: exit .15sease0s1normalforwards;

      animation: exit var(--tw-animation-duration,var(--tw-duration,.15s))var(--tw-ease,ease)var(--tw-animation-delay,0s)var(--tw-animation-iteration-count,1)var(--tw-animation-direction,normal)var(--tw-animation-fill-mode,forwards);
    }
  }

  .data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\] {

    &[data-swipe="move"] {

      --tw-translate-x: var(--radix-toast-swipe-move-x);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .data-\[swipe\=move\]\:transition-none {

    &[data-swipe="move"] {

      transition-property: none;
    }
  }

  .data-\[variant\=destructive\]\:text-destructive {

    &[data-variant="destructive"] {

      color: oklch(0.6 0.25 25);

      color: var(--destructive);
    }
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10 {

    &[data-variant="destructive"] {

      &:focus {

        background-color: oklch(0.6 0.25 25);

        background-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.6 0.25 25) 10%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
          }
}
      }
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive {

    &[data-variant="destructive"] {

      &:focus {

        color: oklch(0.6 0.25 25);

        color: var(--destructive);
      }
    }
  }

  .data-\[variant\=outline\]\:border-l-0 {

    &[data-variant="outline"] {

      border-left-style: var(--tw-border-style);

      border-left-width: 0px;
    }
  }

  .data-\[variant\=outline\]\:shadow-xs {

    &[data-variant="outline"] {

      --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 2px 0 rgb(0 0 0 / 0.05);

      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .data-\[variant\=outline\]\:first\:border-l {

    &[data-variant="outline"] {

      &:first-child {

        border-left-style: var(--tw-border-style);

        border-left-width: 1px;
      }
    }
  }

  .data-\[vaul-drawer-direction\=bottom\]\:inset-x-0 {

    &[data-vaul-drawer-direction="bottom"] {

      inset-inline: calc(0.25rem * 0);

      inset-inline: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=bottom\]\:bottom-0 {

    &[data-vaul-drawer-direction="bottom"] {

      bottom: calc(0.25rem * 0);

      bottom: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=bottom\]\:mt-24 {

    &[data-vaul-drawer-direction="bottom"] {

      margin-top: calc(0.25rem * 24);

      margin-top: calc(var(--spacing) * 24);
    }
  }

  .data-\[vaul-drawer-direction\=bottom\]\:max-h-\[80vh\] {

    &[data-vaul-drawer-direction="bottom"] {

      max-height: 80vh;
    }
  }

  .data-\[vaul-drawer-direction\=bottom\]\:rounded-t-lg {

    &[data-vaul-drawer-direction="bottom"] {

      border-top-left-radius: 0.75rem;

      border-top-left-radius: var(--radius);

      border-top-right-radius: 0.75rem;

      border-top-right-radius: var(--radius);
    }
  }

  .data-\[vaul-drawer-direction\=bottom\]\:border-t {

    &[data-vaul-drawer-direction="bottom"] {

      border-top-style: var(--tw-border-style);

      border-top-width: 1px;
    }
  }

  .data-\[vaul-drawer-direction\=left\]\:inset-y-0 {

    &[data-vaul-drawer-direction="left"] {

      inset-block: calc(0.25rem * 0);

      inset-block: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=left\]\:left-0 {

    &[data-vaul-drawer-direction="left"] {

      left: calc(0.25rem * 0);

      left: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=left\]\:w-3\/4 {

    &[data-vaul-drawer-direction="left"] {

      width: calc(3/4 * 100%);
    }
  }

  .data-\[vaul-drawer-direction\=left\]\:border-r {

    &[data-vaul-drawer-direction="left"] {

      border-right-style: var(--tw-border-style);

      border-right-width: 1px;
    }
  }

  .data-\[vaul-drawer-direction\=right\]\:inset-y-0 {

    &[data-vaul-drawer-direction="right"] {

      inset-block: calc(0.25rem * 0);

      inset-block: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=right\]\:right-0 {

    &[data-vaul-drawer-direction="right"] {

      right: calc(0.25rem * 0);

      right: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=right\]\:w-3\/4 {

    &[data-vaul-drawer-direction="right"] {

      width: calc(3/4 * 100%);
    }
  }

  .data-\[vaul-drawer-direction\=right\]\:border-l {

    &[data-vaul-drawer-direction="right"] {

      border-left-style: var(--tw-border-style);

      border-left-width: 1px;
    }
  }

  .data-\[vaul-drawer-direction\=top\]\:inset-x-0 {

    &[data-vaul-drawer-direction="top"] {

      inset-inline: calc(0.25rem * 0);

      inset-inline: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=top\]\:top-0 {

    &[data-vaul-drawer-direction="top"] {

      top: calc(0.25rem * 0);

      top: calc(var(--spacing) * 0);
    }
  }

  .data-\[vaul-drawer-direction\=top\]\:mb-24 {

    &[data-vaul-drawer-direction="top"] {

      margin-bottom: calc(0.25rem * 24);

      margin-bottom: calc(var(--spacing) * 24);
    }
  }

  .data-\[vaul-drawer-direction\=top\]\:max-h-\[80vh\] {

    &[data-vaul-drawer-direction="top"] {

      max-height: 80vh;
    }
  }

  .data-\[vaul-drawer-direction\=top\]\:rounded-b-lg {

    &[data-vaul-drawer-direction="top"] {

      border-bottom-right-radius: 0.75rem;

      border-bottom-right-radius: var(--radius);

      border-bottom-left-radius: 0.75rem;

      border-bottom-left-radius: var(--radius);
    }
  }

  .data-\[vaul-drawer-direction\=top\]\:border-b {

    &[data-vaul-drawer-direction="top"] {

      border-bottom-style: var(--tw-border-style);

      border-bottom-width: 1px;
    }
  }

  .supports-\[backdrop-filter\]\:bg-background\/60 {

    @supports (backdrop-filter: var(--tw)) {

      background-color: var(--background);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, var(--background) 60%, transparent);
      }
    }
  }

  .sm\:top-auto {

    @media (min-width: 40rem) {

      top: auto;
    }
  }

  .sm\:right-0 {

    @media (min-width: 40rem) {

      right: calc(0.25rem * 0);

      right: calc(var(--spacing) * 0);
    }
  }

  .sm\:bottom-0 {

    @media (min-width: 40rem) {

      bottom: calc(0.25rem * 0);

      bottom: calc(var(--spacing) * 0);
    }
  }

  .sm\:block {

    @media (min-width: 40rem) {

      display: block;
    }
  }

  .sm\:flex {

    @media (min-width: 40rem) {

      display: flex;
    }
  }

  .sm\:max-w-\[800px\] {

    @media (min-width: 40rem) {

      max-width: 800px;
    }
  }

  .sm\:max-w-lg {

    @media (min-width: 40rem) {

      max-width: 32rem;

      max-width: var(--container-lg);
    }
  }

  .sm\:max-w-sm {

    @media (min-width: 40rem) {

      max-width: 24rem;

      max-width: var(--container-sm);
    }
  }

  .sm\:flex-col {

    @media (min-width: 40rem) {

      flex-direction: column;
    }
  }

  .sm\:flex-row {

    @media (min-width: 40rem) {

      flex-direction: row;
    }
  }

  .sm\:justify-end {

    @media (min-width: 40rem) {

      justify-content: flex-end;
    }
  }

  .sm\:gap-2\.5 {

    @media (min-width: 40rem) {

      gap: calc(0.25rem * 2.5);

      gap: calc(var(--spacing) * 2.5);
    }
  }

  .sm\:px-6 {

    @media (min-width: 40rem) {

      padding-inline: calc(0.25rem * 6);

      padding-inline: calc(var(--spacing) * 6);
    }
  }

  .sm\:pr-2\.5 {

    @media (min-width: 40rem) {

      padding-right: calc(0.25rem * 2.5);

      padding-right: calc(var(--spacing) * 2.5);
    }
  }

  .sm\:pl-2\.5 {

    @media (min-width: 40rem) {

      padding-left: calc(0.25rem * 2.5);

      padding-left: calc(var(--spacing) * 2.5);
    }
  }

  .sm\:text-left {

    @media (min-width: 40rem) {

      text-align: left;
    }
  }

  .data-\[state\=open\]\:sm\:slide-in-from-bottom-full {

    &[data-state="open"] {

      @media (min-width: 40rem) {

        --tw-enter-translate-y: calc(1*100%);
      }
    }
  }

  .data-\[vaul-drawer-direction\=left\]\:sm\:max-w-sm {

    &[data-vaul-drawer-direction="left"] {

      @media (min-width: 40rem) {

        max-width: 24rem;

        max-width: var(--container-sm);
      }
    }
  }

  .data-\[vaul-drawer-direction\=right\]\:sm\:max-w-sm {

    &[data-vaul-drawer-direction="right"] {

      @media (min-width: 40rem) {

        max-width: 24rem;

        max-width: var(--container-sm);
      }
    }
  }

  .md\:absolute {

    @media (min-width: 48rem) {

      position: absolute;
    }
  }

  .md\:block {

    @media (min-width: 48rem) {

      display: block;
    }
  }

  .md\:flex {

    @media (min-width: 48rem) {

      display: flex;
    }
  }

  .md\:hidden {

    @media (min-width: 48rem) {

      display: none;
    }
  }

  .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {

    @media (min-width: 48rem) {

      width: var(--radix-navigation-menu-viewport-width);
    }
  }

  .md\:w-auto {

    @media (min-width: 48rem) {

      width: auto;
    }
  }

  .md\:max-w-\[420px\] {

    @media (min-width: 48rem) {

      max-width: 420px;
    }
  }

  .md\:max-w-sm {

    @media (min-width: 48rem) {

      max-width: 24rem;

      max-width: var(--container-sm);
    }
  }

  .md\:grid-cols-2 {

    @media (min-width: 48rem) {

      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  .md\:grid-cols-3 {

    @media (min-width: 48rem) {

      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  .md\:grid-cols-4 {

    @media (min-width: 48rem) {

      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  .md\:grid-cols-5 {

    @media (min-width: 48rem) {

      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }

  .md\:flex-row {

    @media (min-width: 48rem) {

      flex-direction: row;
    }
  }

  .md\:gap-1\.5 {

    @media (min-width: 48rem) {

      gap: calc(0.25rem * 1.5);

      gap: calc(var(--spacing) * 1.5);
    }
  }

  .md\:p-12 {

    @media (min-width: 48rem) {

      padding: calc(0.25rem * 12);

      padding: calc(var(--spacing) * 12);
    }
  }

  .md\:py-20 {

    @media (min-width: 48rem) {

      padding-block: calc(0.25rem * 20);

      padding-block: calc(var(--spacing) * 20);
    }
  }

  .md\:text-left {

    @media (min-width: 48rem) {

      text-align: left;
    }
  }

  .md\:text-2xl {

    @media (min-width: 48rem) {

      font-size: 1.5rem;

      font-size: var(--text-2xl);

      line-height: calc(2 / 1.5);

      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  .md\:text-4xl {

    @media (min-width: 48rem) {

      font-size: 2.25rem;

      font-size: var(--text-4xl);

      line-height: calc(2.5 / 2.25);

      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  .md\:text-5xl {

    @media (min-width: 48rem) {

      font-size: 3rem;

      font-size: var(--text-5xl);

      line-height: 1;

      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  .md\:text-6xl {

    @media (min-width: 48rem) {

      font-size: 3.75rem;

      font-size: var(--text-6xl);

      line-height: 1;

      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  .md\:text-sm {

    @media (min-width: 48rem) {

      font-size: 0.875rem;

      font-size: var(--text-sm);

      line-height: calc(1.25 / 0.875);

      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  .md\:opacity-0 {

    @media (min-width: 48rem) {

      opacity: 0%;
    }
  }

  .md\:peer-data-\[variant\=inset\]\:m-2 {

    @media (min-width: 48rem) {

      &:is(:where(.peer)[data-variant="inset"] ~ *) {

        margin: calc(0.25rem * 2);

        margin: calc(var(--spacing) * 2);
      }
    }
  }

  .md\:peer-data-\[variant\=inset\]\:ml-0 {

    @media (min-width: 48rem) {

      &:is(:where(.peer)[data-variant="inset"] ~ *) {

        margin-left: calc(0.25rem * 0);

        margin-left: calc(var(--spacing) * 0);
      }
    }
  }

  .md\:peer-data-\[variant\=inset\]\:rounded-xl {

    @media (min-width: 48rem) {

      &:is(:where(.peer)[data-variant="inset"] ~ *) {

        border-radius: calc(0.75rem + 4px);

        border-radius: calc(var(--radius) + 4px);
      }
    }
  }

  .md\:peer-data-\[variant\=inset\]\:shadow-sm {

    @media (min-width: 48rem) {

      &:is(:where(.peer)[data-variant="inset"] ~ *) {

        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);

        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }

  .md\:peer-data-\[variant\=inset\]\:peer-data-\[state\=collapsed\]\:ml-2 {

    @media (min-width: 48rem) {

      &:is(:where(.peer)[data-variant="inset"] ~ *) {

        &:is(:where(.peer)[data-state="collapsed"] ~ *) {

          margin-left: calc(0.25rem * 2);

          margin-left: calc(var(--spacing) * 2);
        }
      }
    }
  }

  .md\:after\:hidden {

    @media (min-width: 48rem) {

      &::after {

        content: var(--tw-content);

        display: none;
      }
    }
  }

  .lg\:grid-cols-2 {

    @media (min-width: 64rem) {

      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  .lg\:grid-cols-3 {

    @media (min-width: 64rem) {

      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  .lg\:px-8 {

    @media (min-width: 64rem) {

      padding-inline: calc(0.25rem * 8);

      padding-inline: calc(var(--spacing) * 8);
    }
  }

  .dark\:scale-0 {

    @media (prefers-color-scheme: dark) {

      --tw-scale-x: 0%;

      --tw-scale-y: 0%;

      --tw-scale-z: 0%;

      scale: 0% 0%;

      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  .dark\:scale-100 {

    @media (prefers-color-scheme: dark) {

      --tw-scale-x: 100%;

      --tw-scale-y: 100%;

      --tw-scale-z: 100%;

      scale: 100% 100%;

      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  .dark\:-rotate-90 {

    @media (prefers-color-scheme: dark) {

      rotate: calc(90deg * -1);
    }
  }

  .dark\:rotate-0 {

    @media (prefers-color-scheme: dark) {

      rotate: 0deg;
    }
  }

  .dark\:border-input {

    @media (prefers-color-scheme: dark) {

      border-color: oklch(0.95 0.02 280);

      border-color: var(--input);
    }
  }

  .dark\:bg-destructive\/60 {

    @media (prefers-color-scheme: dark) {

      background-color: oklch(0.6 0.25 25);

      background-color: var(--destructive);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, oklch(0.6 0.25 25) 60%, transparent);
      }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
        }
}
    }
  }

  .dark\:bg-input\/30 {

    @media (prefers-color-scheme: dark) {

      background-color: oklch(0.95 0.02 280);

      background-color: var(--input);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, oklch(0.95 0.02 280) 30%, transparent);
      }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
}
    }
  }

  .dark\:bg-neutral-900\/95 {

    @media (prefers-color-scheme: dark) {

      background-color: color-mix(in srgb, oklch(20.5% 0 0) 95%, transparent);

      @supports (color: color-mix(in lab, red, red)) {

        background-color: color-mix(in oklab, oklch(20.5% 0 0) 95%, transparent);
      }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, var(--color-neutral-900) 95%, transparent);
        }
}
    }
  }

  .dark\:from-gray-900 {

    @media (prefers-color-scheme: dark) {

      --tw-gradient-from: var(--color-gray-900);

      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  .dark\:to-gray-800 {

    @media (prefers-color-scheme: dark) {

      --tw-gradient-to: var(--color-gray-800);

      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  .dark\:text-muted-foreground {

    @media (prefers-color-scheme: dark) {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }
  }

  .dark\:text-white {

    @media (prefers-color-scheme: dark) {

      color: #fff;

      color: var(--color-white);
    }
  }

  .dark\:ring-white\/10 {

    @media (prefers-color-scheme: dark) {

      --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);

      @supports (color: color-mix(in lab, red, red)) {

        --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }

  .dark\:hover\:bg-accent\/50 {

    @media (prefers-color-scheme: dark) {

      &:hover {

        @media (hover: hover) {

          background-color: oklch(0.8 0.15 320);

          background-color: var(--accent);

          @supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, oklch(0.8 0.15 320) 50%, transparent);
          }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

              background-color: color-mix(in oklab, var(--accent) 50%, transparent);
            }
}
        }
      }
    }
  }

  .dark\:hover\:bg-input\/50 {

    @media (prefers-color-scheme: dark) {

      &:hover {

        @media (hover: hover) {

          background-color: oklch(0.95 0.02 280);

          background-color: var(--input);

          @supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, oklch(0.95 0.02 280) 50%, transparent);
          }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

              background-color: color-mix(in oklab, var(--input) 50%, transparent);
            }
}
        }
      }
    }
  }

  .dark\:hover\:text-accent-foreground {

    @media (prefers-color-scheme: dark) {

      &:hover {

        @media (hover: hover) {

          color: oklch(0.15 0.02 280);

          color: var(--accent-foreground);
        }
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40 {

    @media (prefers-color-scheme: dark) {

      &:focus-visible {

        --tw-ring-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40 {

    @media (prefers-color-scheme: dark) {

      &[aria-invalid="true"] {

        --tw-ring-color: var(--destructive);

        @supports (color: color-mix(in lab, red, red)) {

          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }

  .dark\:data-\[active\=true\]\:aria-invalid\:ring-destructive\/40 {

    @media (prefers-color-scheme: dark) {

      &[data-active="true"] {

        &[aria-invalid="true"] {

          --tw-ring-color: var(--destructive);

          @supports (color: color-mix(in lab, red, red)) {

            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
          }
        }
      }
    }
  }

  .dark\:data-\[state\=active\]\:border-input {

    @media (prefers-color-scheme: dark) {

      &[data-state="active"] {

        border-color: oklch(0.95 0.02 280);

        border-color: var(--input);
      }
    }
  }

  .dark\:data-\[state\=active\]\:bg-input\/30 {

    @media (prefers-color-scheme: dark) {

      &[data-state="active"] {

        background-color: oklch(0.95 0.02 280);

        background-color: var(--input);

        @supports (color: color-mix(in lab, red, red)) {

          background-color: color-mix(in oklab, oklch(0.95 0.02 280) 30%, transparent);
        }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, var(--input) 30%, transparent);
          }
}
      }
    }
  }

  .dark\:data-\[state\=active\]\:text-foreground {

    @media (prefers-color-scheme: dark) {

      &[data-state="active"] {

        color: oklch(0.15 0.02 280);

        color: var(--foreground);
      }
    }
  }

  .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20 {

    @media (prefers-color-scheme: dark) {

      &[data-variant="destructive"] {

        &:focus {

          background-color: oklch(0.6 0.25 25);

          background-color: var(--destructive);

          @supports (color: color-mix(in lab, red, red)) {

            background-color: color-mix(in oklab, oklch(0.6 0.25 25) 20%, transparent);
          }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

              background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
            }
}
        }
      }
    }
  }

  .\[\&_\.recharts-cartesian-axis-tick_text\]\:fill-muted-foreground {

    & .recharts-cartesian-axis-tick text {

      fill: oklch(0.5 0.05 280);

      fill: var(--muted-foreground);
    }
  }

  .\[\&_\.recharts-cartesian-grid_line\[stroke\=\'\#ccc\'\]\]\:stroke-border\/50 {

    & .recharts-cartesian-grid line[stroke='#ccc'] {

      stroke: oklch(0.88 0.03 280);

      stroke: var(--border);

      @supports (color: color-mix(in lab, red, red)) {

        stroke: color-mix(in oklab, oklch(0.88 0.03 280) 50%, transparent);
      }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

          stroke: color-mix(in oklab, var(--border) 50%, transparent);
        }
}
    }
  }

  .\[\&_\.recharts-curve\.recharts-tooltip-cursor\]\:stroke-border {

    & .recharts-curve.recharts-tooltip-cursor {

      stroke: oklch(0.88 0.03 280);

      stroke: var(--border);
    }
  }

  .\[\&_\.recharts-dot\[stroke\=\'\#fff\'\]\]\:stroke-transparent {

    & .recharts-dot[stroke='#fff'] {

      stroke: transparent;
    }
  }

  .\[\&_\.recharts-layer\]\:outline-hidden {

    & .recharts-layer {

      --tw-outline-style: none;

      outline-style: none;

      @media (forced-colors: active) {

        outline: 2px solid transparent;

        outline-offset: 2px;
      }
    }
  }

  .\[\&_\.recharts-polar-grid_\[stroke\=\'\#ccc\'\]\]\:stroke-border {

    & .recharts-polar-grid [stroke='#ccc'] {

      stroke: oklch(0.88 0.03 280);

      stroke: var(--border);
    }
  }

  .\[\&_\.recharts-radial-bar-background-sector\]\:fill-muted {

    & .recharts-radial-bar-background-sector {

      fill: oklch(0.94 0.02 280);

      fill: var(--muted);
    }
  }

  .\[\&_\.recharts-rectangle\.recharts-tooltip-cursor\]\:fill-muted {

    & .recharts-rectangle.recharts-tooltip-cursor {

      fill: oklch(0.94 0.02 280);

      fill: var(--muted);
    }
  }

  .\[\&_\.recharts-reference-line_\[stroke\=\'\#ccc\'\]\]\:stroke-border {

    & .recharts-reference-line [stroke='#ccc'] {

      stroke: oklch(0.88 0.03 280);

      stroke: var(--border);
    }
  }

  .\[\&_\.recharts-sector\]\:outline-hidden {

    & .recharts-sector {

      --tw-outline-style: none;

      outline-style: none;

      @media (forced-colors: active) {

        outline: 2px solid transparent;

        outline-offset: 2px;
      }
    }
  }

  .\[\&_\.recharts-sector\[stroke\=\'\#fff\'\]\]\:stroke-transparent {

    & .recharts-sector[stroke='#fff'] {

      stroke: transparent;
    }
  }

  .\[\&_\.recharts-surface\]\:outline-hidden {

    & .recharts-surface {

      --tw-outline-style: none;

      outline-style: none;

      @media (forced-colors: active) {

        outline: 2px solid transparent;

        outline-offset: 2px;
      }
    }
  }

  .\[\&_\[cmdk-group-heading\]\]\:px-2 {

    & [cmdk-group-heading] {

      padding-inline: calc(0.25rem * 2);

      padding-inline: calc(var(--spacing) * 2);
    }
  }

  .\[\&_\[cmdk-group-heading\]\]\:py-1\.5 {

    & [cmdk-group-heading] {

      padding-block: calc(0.25rem * 1.5);

      padding-block: calc(var(--spacing) * 1.5);
    }
  }

  .\[\&_\[cmdk-group-heading\]\]\:text-xs {

    & [cmdk-group-heading] {

      font-size: 0.75rem;

      font-size: var(--text-xs);

      line-height: calc(1 / 0.75);

      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }

  .\[\&_\[cmdk-group-heading\]\]\:font-medium {

    & [cmdk-group-heading] {

      --tw-font-weight: var(--font-weight-medium);

      font-weight: 500;

      font-weight: var(--font-weight-medium);
    }
  }

  .\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground {

    & [cmdk-group-heading] {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }
  }

  .\[\&_\[cmdk-group\]\]\:px-2 {

    & [cmdk-group] {

      padding-inline: calc(0.25rem * 2);

      padding-inline: calc(var(--spacing) * 2);
    }
  }

  .\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 {

    & [cmdk-group]:not([hidden]) ~[cmdk-group] {

      padding-top: calc(0.25rem * 0);

      padding-top: calc(var(--spacing) * 0);
    }
  }

  .\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 {

    & [cmdk-input-wrapper] svg {

      height: calc(0.25rem * 5);

      height: calc(var(--spacing) * 5);
    }
  }

  .\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 {

    & [cmdk-input-wrapper] svg {

      width: calc(0.25rem * 5);

      width: calc(var(--spacing) * 5);
    }
  }

  .\[\&_\[cmdk-input\]\]\:h-12 {

    & [cmdk-input] {

      height: calc(0.25rem * 12);

      height: calc(var(--spacing) * 12);
    }
  }

  .\[\&_\[cmdk-item\]\]\:px-2 {

    & [cmdk-item] {

      padding-inline: calc(0.25rem * 2);

      padding-inline: calc(var(--spacing) * 2);
    }
  }

  .\[\&_\[cmdk-item\]\]\:py-3 {

    & [cmdk-item] {

      padding-block: calc(0.25rem * 3);

      padding-block: calc(var(--spacing) * 3);
    }
  }

  .\[\&_\[cmdk-item\]_svg\]\:h-5 {

    & [cmdk-item] svg {

      height: calc(0.25rem * 5);

      height: calc(var(--spacing) * 5);
    }
  }

  .\[\&_\[cmdk-item\]_svg\]\:w-5 {

    & [cmdk-item] svg {

      width: calc(0.25rem * 5);

      width: calc(var(--spacing) * 5);
    }
  }

  .\[\&_p\]\:leading-relaxed {

    & p {

      --tw-leading: var(--leading-relaxed);

      line-height: 1.625;

      line-height: var(--leading-relaxed);
    }
  }

  .\[\&_svg\]\:pointer-events-none {

    & svg {

      pointer-events: none;
    }
  }

  .\[\&_svg\]\:shrink-0 {

    & svg {

      flex-shrink: 0;
    }
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 {

    & svg:not([class*='size-']) {

      width: calc(0.25rem * 4);

      width: calc(var(--spacing) * 4);

      height: calc(0.25rem * 4);

      height: calc(var(--spacing) * 4);
    }
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground {

    & svg:not([class*='text-']) {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }
  }

  .\[\&_tr\]\:border-b {

    & tr {

      border-bottom-style: var(--tw-border-style);

      border-bottom-width: 1px;
    }
  }

  .\[\&_tr\:last-child\]\:border-0 {

    & tr:last-child {

      border-style: var(--tw-border-style);

      border-width: 0px;
    }
  }

  .\[\&\:first-child\[data-selected\=true\]_button\]\:rounded-l-md {

    &:first-child[data-selected=true] button {

      border-top-left-radius: calc(0.75rem - 2px);

      border-top-left-radius: calc(var(--radius) - 2px);

      border-bottom-left-radius: calc(0.75rem - 2px);

      border-bottom-left-radius: calc(var(--radius) - 2px);
    }
  }

  .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0 {

    &:has([role=checkbox]) {

      padding-right: calc(0.25rem * 0);

      padding-right: calc(var(--spacing) * 0);
    }
  }

  .\[\.border-b\]\:pb-6 {

    &:is(.border-b) {

      padding-bottom: calc(0.25rem * 6);

      padding-bottom: calc(var(--spacing) * 6);
    }
  }

  .\[\.border-t\]\:pt-6 {

    &:is(.border-t) {

      padding-top: calc(0.25rem * 6);

      padding-top: calc(var(--spacing) * 6);
    }
  }

  .rtl\:\*\*\:\[\.rdp-button\\_next\>svg\]\:rotate-180 {

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {

      :is(& *) {

        &:is(.rdp-button_next>svg) {

          rotate: 180deg;
        }
      }
    }
  }

  .rtl\:\*\*\:\[\.rdp-button\\_previous\>svg\]\:rotate-180 {

    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {

      :is(& *) {

        &:is(.rdp-button_previous>svg) {

          rotate: 180deg;
        }
      }
    }
  }

  .data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive {

    &[data-variant="destructive"] {

      :is(& > *) {

        &:is(svg) {

          color: oklch(0.6 0.25 25) !important;

          color: var(--destructive) !important;
        }
      }
    }
  }

  .\[\&\:last-child\[data-selected\=true\]_button\]\:rounded-r-md {

    &:last-child[data-selected=true] button {

      border-top-right-radius: calc(0.75rem - 2px);

      border-top-right-radius: calc(var(--radius) - 2px);

      border-bottom-right-radius: calc(0.75rem - 2px);

      border-bottom-right-radius: calc(var(--radius) - 2px);
    }
  }

  .\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\] {

    &>[role=checkbox] {

      --tw-translate-y: 2px;

      translate: var(--tw-translate-x) 2px;

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .\[\&\>button\]\:hidden {

    &>button {

      display: none;
    }
  }

  .\[\&\>span\]\:line-clamp-1 {

    &>span {

      overflow: hidden;

      display: -webkit-box;

      -webkit-box-orient: vertical;

      -webkit-line-clamp: 1;
    }
  }

  .\[\&\>span\]\:text-xs {

    &>span {

      font-size: 0.75rem;

      font-size: var(--text-xs);

      line-height: calc(1 / 0.75);

      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }

  .\[\&\>span\]\:opacity-70 {

    &>span {

      opacity: 70%;
    }
  }

  .\[\&\>span\:last-child\]\:truncate {

    &>span:last-child {

      overflow: hidden;

      text-overflow: ellipsis;

      white-space: nowrap;
    }
  }

  .\[\&\>svg\]\:size-3\.5 {

    &>svg {

      width: calc(0.25rem * 3.5);

      width: calc(var(--spacing) * 3.5);

      height: calc(0.25rem * 3.5);

      height: calc(var(--spacing) * 3.5);
    }
  }

  .\[\&\>svg\]\:size-4 {

    &>svg {

      width: calc(0.25rem * 4);

      width: calc(var(--spacing) * 4);

      height: calc(0.25rem * 4);

      height: calc(var(--spacing) * 4);
    }
  }

  .\[\&\>svg\]\:h-2\.5 {

    &>svg {

      height: calc(0.25rem * 2.5);

      height: calc(var(--spacing) * 2.5);
    }
  }

  .\[\&\>svg\]\:h-3 {

    &>svg {

      height: calc(0.25rem * 3);

      height: calc(var(--spacing) * 3);
    }
  }

  .\[\&\>svg\]\:w-2\.5 {

    &>svg {

      width: calc(0.25rem * 2.5);

      width: calc(var(--spacing) * 2.5);
    }
  }

  .\[\&\>svg\]\:w-3 {

    &>svg {

      width: calc(0.25rem * 3);

      width: calc(var(--spacing) * 3);
    }
  }

  .\[\&\>svg\]\:shrink-0 {

    &>svg {

      flex-shrink: 0;
    }
  }

  .\[\&\>svg\]\:translate-y-0\.5 {

    &>svg {

      --tw-translate-y: calc(var(--spacing) * 0.5);

      translate: var(--tw-translate-x) calc(0.25rem * 0.5);

      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  .\[\&\>svg\]\:text-current {

    &>svg {

      color: currentcolor;
    }
  }

  .\[\&\>svg\]\:text-muted-foreground {

    &>svg {

      color: oklch(0.5 0.05 280);

      color: var(--muted-foreground);
    }
  }

  .\[\&\>svg\]\:text-sidebar-accent-foreground {

    &>svg {

      color: oklch(0.15 0.02 280);

      color: var(--sidebar-accent-foreground);
    }
  }

  .\[\&\>tr\]\:last\:border-b-0 {

    &>tr {

      &:last-child {

        border-bottom-style: var(--tw-border-style);

        border-bottom-width: 0px;
      }
    }
  }

  .\[\&\[data-panel-group-direction\=vertical\]\>div\]\:rotate-90 {

    &[data-panel-group-direction=vertical]>div {

      rotate: 90deg;
    }
  }

  .\[\&\[data-state\=open\]\>svg\]\:rotate-180 {

    &[data-state=open]>svg {

      rotate: 180deg;
    }
  }

  .\[\[data-side\=left\]\[data-collapsible\=offcanvas\]_\&\]\:-right-2 {

    [data-side=left][data-collapsible=offcanvas] & {

      right: calc(0.25rem * -2);

      right: calc(var(--spacing) * -2);
    }
  }

  .\[\[data-side\=left\]\[data-state\=collapsed\]_\&\]\:cursor-e-resize {

    [data-side=left][data-state=collapsed] & {

      cursor: e-resize;
    }
  }

  .\[\[data-side\=right\]\[data-collapsible\=offcanvas\]_\&\]\:-left-2 {

    [data-side=right][data-collapsible=offcanvas] & {

      left: calc(0.25rem * -2);

      left: calc(var(--spacing) * -2);
    }
  }

  .\[\[data-side\=right\]\[data-state\=collapsed\]_\&\]\:cursor-w-resize {

    [data-side=right][data-state=collapsed] & {

      cursor: w-resize;
    }
  }

  .\[\[data-slot\=card-content\]_\&\]\:bg-transparent {

    [data-slot=card-content] & {

      background-color: transparent;
    }
  }

  .\[\[data-slot\=popover-content\]_\&\]\:bg-transparent {

    [data-slot=popover-content] & {

      background-color: transparent;
    }
  }
}

@property --tw-animation-delay {

  syntax: "*";

  inherits: false;

  initial-value: 0s;
}

@property --tw-animation-direction {

  syntax: "*";

  inherits: false;

  initial-value: normal;
}

@property --tw-animation-duration {

  syntax: "*";

  inherits: false;
}

@property --tw-animation-fill-mode {

  syntax: "*";

  inherits: false;

  initial-value: forwards;
}

@property --tw-animation-iteration-count {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-enter-opacity {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-enter-rotate {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-enter-scale {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-enter-translate-x {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-enter-translate-y {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-exit-opacity {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-exit-rotate {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-exit-scale {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-exit-translate-x {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-exit-translate-y {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

:root {

  --background: oklch(0.99 0.01 120);

  --foreground: oklch(0.15 0.02 280);

  --card: oklch(0.98 0.01 120);

  --card-foreground: oklch(0.15 0.02 280);

  --popover: oklch(0.98 0.01 120);

  --popover-foreground: oklch(0.15 0.02 280);

  --primary: oklch(0.65 0.25 250);

  --primary-foreground: oklch(0.98 0.01 120);

  --success: oklch(0.7 0.18 160);

  --success-foreground: oklch(0.98 0.01 120);

  --warning: oklch(0.75 0.2 50);

  --warning-foreground: oklch(0.15 0.02 280);

  --destructive: oklch(0.6 0.25 25);

  --destructive-foreground: oklch(0.98 0.01 120);

  --secondary: oklch(0.85 0.08 300);

  --secondary-foreground: oklch(0.15 0.02 280);

  --muted: oklch(0.94 0.02 280);

  --muted-foreground: oklch(0.5 0.05 280);

  --accent: oklch(0.8 0.15 320);

  --accent-foreground: oklch(0.15 0.02 280);

  --border: oklch(0.88 0.03 280);

  --input: oklch(0.95 0.02 280);

  --ring: oklch(0.65 0.25 250);

  --chart-1: oklch(0.65 0.25 250);

  --chart-2: oklch(0.7 0.18 160);

  --chart-3: oklch(0.75 0.2 50);

  --chart-4: oklch(0.7 0.2 320);

  --chart-5: oklch(0.75 0.2 350);

  --radius: 0.75rem;

  --sidebar: oklch(0.97 0.01 280);

  --sidebar-foreground: oklch(0.15 0.02 280);

  --sidebar-primary: oklch(0.65 0.25 250);

  --sidebar-primary-foreground: oklch(0.98 0.01 120);

  --sidebar-accent: oklch(0.85 0.08 300);

  --sidebar-accent-foreground: oklch(0.15 0.02 280);

  --sidebar-border: oklch(0.88 0.03 280);

  --sidebar-ring: oklch(0.65 0.25 250);
}

.dark {

  --background: oklch(0.15 0.05 240);

  --foreground: oklch(0.95 0.01 120);

  --card: oklch(0.15 0.05 240);

  --card-foreground: oklch(0.95 0.01 120);

  --popover: oklch(0.15 0.02 280);

  --popover-foreground: oklch(0.95 0.01 120);

  --primary: oklch(0.7 0.25 250);

  --primary-foreground: oklch(0.12 0.02 280);

  --secondary: oklch(0.25 0.05 300);

  --secondary-foreground: oklch(0.95 0.01 120);

  --muted: oklch(0.22 0.03 280);

  --muted-foreground: oklch(0.7 0.02 280);

  --accent: oklch(0.35 0.12 320);

  --accent-foreground: oklch(0.95 0.01 120);

  --destructive: oklch(0.55 0.22 25);

  --destructive-foreground: oklch(0.95 0.01 120);

  --border: oklch(0.25 0.03 280);

  --input: oklch(0.22 0.03 280);

  --ring: oklch(0.7 0.25 250);

  --chart-1: oklch(0.7 0.25 250);

  --chart-2: oklch(0.75 0.18 160);

  --chart-3: oklch(0.8 0.2 50);

  --chart-4: oklch(0.75 0.2 320);

  --chart-5: oklch(0.8 0.2 350);

  --sidebar: oklch(0.18 0.02 280);

  --sidebar-foreground: oklch(0.95 0.01 120);

  --sidebar-primary: oklch(0.7 0.25 250);

  --sidebar-primary-foreground: oklch(0.12 0.02 280);

  --sidebar-accent: oklch(0.25 0.05 300);

  --sidebar-accent-foreground: oklch(0.95 0.01 120);

  --sidebar-border: oklch(0.25 0.03 280);

  --sidebar-ring: oklch(0.7 0.25 250);
}

@layer base {

  * {

    border-color: oklch(0.88 0.03 280);

    border-color: var(--border);

    outline-color: oklch(0.65 0.25 250);

    outline-color: var(--ring);

    @supports (color: color-mix(in lab, red, red)) {

      outline-color: color-mix(in oklab, oklch(0.65 0.25 250) 50%, transparent);
    }

@supports (color: color-mix(in lch, red, blue)) {
@supports (color: color-mix(in lab, red, red)) {

        outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
}
  }

  body {

    background-color: oklch(0.99 0.01 120);

    background-color: var(--background);

    font-family: var(--font-inter);

    color: oklch(0.15 0.02 280);

    color: var(--foreground);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {

    font-family: var(--font-poppins);
  }
}

@layer utilities {

  .text-success {

    color: oklch(0.7 0.18 160);

    color: var(--color-success);
  }

  .text-warning {

    color: oklch(0.75 0.2 50);

    color: var(--color-warning);
  }

  .bg-success {

    background-color: oklch(0.7 0.18 160);

    background-color: var(--color-success);
  }

  .bg-warning {

    background-color: oklch(0.75 0.2 50);

    background-color: var(--color-warning);
  }

  .border-success {

    border-color: oklch(0.7 0.18 160);

    border-color: var(--color-success);
  }

  .border-warning {

    border-color: oklch(0.75 0.2 50);

    border-color: var(--color-warning);
  }
}

@layer utilities {

  .high-contrast {

    --background: oklch(1 0 0);

    --foreground: oklch(0 0 0);

    --card: oklch(1 0 0);

    --card-foreground: oklch(0 0 0);

    --primary: oklch(0 0 0);

    --primary-foreground: oklch(1 0 0);

    --secondary: oklch(0.9 0 0);

    --secondary-foreground: oklch(0 0 0);

    --muted: oklch(0.9 0 0);

    --muted-foreground: oklch(0.2 0 0);

    --border: oklch(0 0 0);

    --input: oklch(1 0 0);
  }

  .high-contrast.dark {

    --background: oklch(0 0 0);

    --foreground: oklch(1 0 0);

    --card: oklch(0 0 0);

    --card-foreground: oklch(1 0 0);

    --primary: oklch(1 0 0);

    --primary-foreground: oklch(0 0 0);

    --secondary: oklch(0.1 0 0);

    --secondary-foreground: oklch(1 0 0);

    --muted: oklch(0.1 0 0);

    --muted-foreground: oklch(0.8 0 0);

    --border: oklch(1 0 0);

    --input: oklch(0 0 0);
  }

  .reduce-motion *,
  .reduce-motion *::before,
  .reduce-motion *::after {

    animation-duration: 0.01ms !important;

    animation-iteration-count: 1 !important;

    transition-duration: 0.01ms !important;

    scroll-behavior: auto !important;
  }

  .screen-reader-mode {

    --radius: 0px;
  }

  .screen-reader-mode * {

    border-radius: 0 !important;
  }

  .screen-reader-mode button,
  .screen-reader-mode a,
  .screen-reader-mode input,
  .screen-reader-mode select {

    outline: 2px solid oklch(0.65 0.25 250) !important;

    outline: 2px solid var(--color-primary) !important;

    outline-offset: 2px !important;
  }

  .keyboard-navigation button:focus-visible,
  .keyboard-navigation a:focus-visible,
  .keyboard-navigation input:focus-visible,
  .keyboard-navigation select:focus-visible,
  .keyboard-navigation [tabindex]:focus-visible {

    outline: 3px solid oklch(0.65 0.25 250) !important;

    outline: 3px solid var(--color-primary) !important;

    outline-offset: 2px !important;

    box-shadow: 0 0 0 5px rgba(37, 99, 235, 0.2) !important;
  }

  .skip-link {

    position: absolute;

    top: -40px;

    left: 6px;

    background: oklch(0.65 0.25 250);

    background: var(--color-primary);

    color: oklch(0.98 0.01 120);

    color: var(--color-primary-foreground);

    padding: 8px;

    text-decoration: none;

    border-radius: 4px;

    z-index: 1000;

    transition: top 0.3s;
  }

  .skip-link:focus {

    top: 6px;
  }
}

@property --tw-translate-x {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-translate-y {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-translate-z {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-scale-x {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-scale-y {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-scale-z {

  syntax: "*";

  inherits: false;

  initial-value: 1;
}

@property --tw-rotate-x {

  syntax: "*";

  inherits: false;
}

@property --tw-rotate-y {

  syntax: "*";

  inherits: false;
}

@property --tw-rotate-z {

  syntax: "*";

  inherits: false;
}

@property --tw-skew-x {

  syntax: "*";

  inherits: false;
}

@property --tw-skew-y {

  syntax: "*";

  inherits: false;
}

@property --tw-space-y-reverse {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-space-x-reverse {

  syntax: "*";

  inherits: false;

  initial-value: 0;
}

@property --tw-border-style {

  syntax: "*";

  inherits: false;

  initial-value: solid;
}

@property --tw-gradient-position {

  syntax: "*";

  inherits: false;
}

@property --tw-gradient-from {

  syntax: "<color>";

  inherits: false;

  initial-value: #0000;
}

@property --tw-gradient-via {

  syntax: "<color>";

  inherits: false;

  initial-value: #0000;
}

@property --tw-gradient-to {

  syntax: "<color>";

  inherits: false;

  initial-value: #0000;
}

@property --tw-gradient-stops {

  syntax: "*";

  inherits: false;
}

@property --tw-gradient-via-stops {

  syntax: "*";

  inherits: false;
}

@property --tw-gradient-from-position {

  syntax: "<length-percentage>";

  inherits: false;

  initial-value: 0%;
}

@property --tw-gradient-via-position {

  syntax: "<length-percentage>";

  inherits: false;

  initial-value: 50%;
}

@property --tw-gradient-to-position {

  syntax: "<length-percentage>";

  inherits: false;

  initial-value: 100%;
}

@property --tw-leading {

  syntax: "*";

  inherits: false;
}

@property --tw-font-weight {

  syntax: "*";

  inherits: false;
}

@property --tw-tracking {

  syntax: "*";

  inherits: false;
}

@property --tw-ordinal {

  syntax: "*";

  inherits: false;
}

@property --tw-slashed-zero {

  syntax: "*";

  inherits: false;
}

@property --tw-numeric-figure {

  syntax: "*";

  inherits: false;
}

@property --tw-numeric-spacing {

  syntax: "*";

  inherits: false;
}

@property --tw-numeric-fraction {

  syntax: "*";

  inherits: false;
}

@property --tw-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {

  syntax: "*";

  inherits: false;
}

@property --tw-shadow-alpha {

  syntax: "<percentage>";

  inherits: false;

  initial-value: 100%;
}

@property --tw-inset-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {

  syntax: "*";

  inherits: false;
}

@property --tw-inset-shadow-alpha {

  syntax: "<percentage>";

  inherits: false;

  initial-value: 100%;
}

@property --tw-ring-color {

  syntax: "*";

  inherits: false;
}

@property --tw-ring-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {

  syntax: "*";

  inherits: false;
}

@property --tw-inset-ring-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {

  syntax: "*";

  inherits: false;
}

@property --tw-ring-offset-width {

  syntax: "<length>";

  inherits: false;

  initial-value: 0px;
}

@property --tw-ring-offset-color {

  syntax: "*";

  inherits: false;

  initial-value: #fff;
}

@property --tw-ring-offset-shadow {

  syntax: "*";

  inherits: false;

  initial-value: 0 0 #0000;
}

@property --tw-outline-style {

  syntax: "*";

  inherits: false;

  initial-value: solid;
}

@property --tw-blur {

  syntax: "*";

  inherits: false;
}

@property --tw-brightness {

  syntax: "*";

  inherits: false;
}

@property --tw-contrast {

  syntax: "*";

  inherits: false;
}

@property --tw-grayscale {

  syntax: "*";

  inherits: false;
}

@property --tw-hue-rotate {

  syntax: "*";

  inherits: false;
}

@property --tw-invert {

  syntax: "*";

  inherits: false;
}

@property --tw-opacity {

  syntax: "*";

  inherits: false;
}

@property --tw-saturate {

  syntax: "*";

  inherits: false;
}

@property --tw-sepia {

  syntax: "*";

  inherits: false;
}

@property --tw-drop-shadow {

  syntax: "*";

  inherits: false;
}

@property --tw-drop-shadow-color {

  syntax: "*";

  inherits: false;
}

@property --tw-drop-shadow-alpha {

  syntax: "<percentage>";

  inherits: false;

  initial-value: 100%;
}

@property --tw-drop-shadow-size {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-blur {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-brightness {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-contrast {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-grayscale {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-hue-rotate {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-invert {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-opacity {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-saturate {

  syntax: "*";

  inherits: false;
}

@property --tw-backdrop-sepia {

  syntax: "*";

  inherits: false;
}

@property --tw-duration {

  syntax: "*";

  inherits: false;
}

@property --tw-ease {

  syntax: "*";

  inherits: false;
}

@property --tw-content {

  syntax: "*";

  initial-value: "";

  inherits: false;
}

@keyframes spin {

  to {

    transform: rotate(360deg);
  }
}

@keyframes ping {

  75%, 100% {

    transform: scale(2);

    opacity: 0;
  }
}

@keyframes pulse {

  50% {

    opacity: 0.5;
  }
}

@keyframes enter {

  from {

    opacity: 1;

    opacity: var(--tw-enter-opacity,1);

    transform: translate3d(0,0,0)scale3d(1,1,1)rotate(0);

    transform: translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0)scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1))rotate(var(--tw-enter-rotate,0));
  }
}

@keyframes exit {

  to {

    opacity: 1;

    opacity: var(--tw-exit-opacity,1);

    transform: translate3d(0,0,0)scale3d(1,1,1)rotate(0);

    transform: translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0)scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1))rotate(var(--tw-exit-rotate,0));
  }
}

@keyframes accordion-down {

  from {

    height: 0;
  }

  to {

    height: auto;

    height: var(--radix-accordion-content-height,var(--bits-accordion-content-height,var(--reka-accordion-content-height,var(--kb-accordion-content-height,auto))));
  }
}

@keyframes accordion-up {

  from {

    height: auto;

    height: var(--radix-accordion-content-height,var(--bits-accordion-content-height,var(--reka-accordion-content-height,var(--kb-accordion-content-height,auto))));
  }

  to {

    height: 0;
  }
}

@keyframes caret-blink {

  0%,70%,100% {

    opacity: 1;
  }

  20%,50% {

    opacity: 0;
  }
}

@layer properties {

  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {

    *, ::before, ::after, ::backdrop {

      --tw-translate-x: 0;

      --tw-translate-y: 0;

      --tw-translate-z: 0;

      --tw-scale-x: 1;

      --tw-scale-y: 1;

      --tw-scale-z: 1;

      --tw-rotate-x: initial;

      --tw-rotate-y: initial;

      --tw-rotate-z: initial;

      --tw-skew-x: initial;

      --tw-skew-y: initial;

      --tw-space-y-reverse: 0;

      --tw-space-x-reverse: 0;

      --tw-border-style: solid;

      --tw-gradient-position: initial;

      --tw-gradient-from: #0000;

      --tw-gradient-via: #0000;

      --tw-gradient-to: #0000;

      --tw-gradient-stops: initial;

      --tw-gradient-via-stops: initial;

      --tw-gradient-from-position: 0%;

      --tw-gradient-via-position: 50%;

      --tw-gradient-to-position: 100%;

      --tw-leading: initial;

      --tw-font-weight: initial;

      --tw-tracking: initial;

      --tw-ordinal: initial;

      --tw-slashed-zero: initial;

      --tw-numeric-figure: initial;

      --tw-numeric-spacing: initial;

      --tw-numeric-fraction: initial;

      --tw-shadow: 0 0 #0000;

      --tw-shadow-color: initial;

      --tw-shadow-alpha: 100%;

      --tw-inset-shadow: 0 0 #0000;

      --tw-inset-shadow-color: initial;

      --tw-inset-shadow-alpha: 100%;

      --tw-ring-color: initial;

      --tw-ring-shadow: 0 0 #0000;

      --tw-inset-ring-color: initial;

      --tw-inset-ring-shadow: 0 0 #0000;

      --tw-ring-inset: initial;

      --tw-ring-offset-width: 0px;

      --tw-ring-offset-color: #fff;

      --tw-ring-offset-shadow: 0 0 #0000;

      --tw-outline-style: solid;

      --tw-blur: initial;

      --tw-brightness: initial;

      --tw-contrast: initial;

      --tw-grayscale: initial;

      --tw-hue-rotate: initial;

      --tw-invert: initial;

      --tw-opacity: initial;

      --tw-saturate: initial;

      --tw-sepia: initial;

      --tw-drop-shadow: initial;

      --tw-drop-shadow-color: initial;

      --tw-drop-shadow-alpha: 100%;

      --tw-drop-shadow-size: initial;

      --tw-backdrop-blur: initial;

      --tw-backdrop-brightness: initial;

      --tw-backdrop-contrast: initial;

      --tw-backdrop-grayscale: initial;

      --tw-backdrop-hue-rotate: initial;

      --tw-backdrop-invert: initial;

      --tw-backdrop-opacity: initial;

      --tw-backdrop-saturate: initial;

      --tw-backdrop-sepia: initial;

      --tw-duration: initial;

      --tw-ease: initial;

      --tw-content: "";

      --tw-animation-delay: 0s;

      --tw-animation-direction: normal;

      --tw-animation-duration: initial;

      --tw-animation-fill-mode: forwards;

      --tw-animation-iteration-count: 1;

      --tw-enter-opacity: 1;

      --tw-enter-rotate: 0;

      --tw-enter-scale: 1;

      --tw-enter-translate-x: 0;

      --tw-enter-translate-y: 0;

      --tw-exit-opacity: 1;

      --tw-exit-rotate: 0;

      --tw-exit-scale: 1;

      --tw-exit-translate-x: 0;

      --tw-exit-translate-y: 0;
    }
  }
}

/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[2].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[2].use[2]!./node_modules/next/font/google/target.css?{"path":"app\\layout.tsx","import":"Poppins","arguments":[{"subsets":["latin"],"weight":["400","600","700"],"variable":"--font-poppins","display":"swap"}],"variableName":"poppins"} ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/034d78ad42e9620c-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/fe0777f1195381cb-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/eafabf029ad39a43-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url(/_next/static/media/29e7bbdce9332268-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url(/_next/static/media/c3bc380753a8436c-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url(/_next/static/media/0484562807a97172-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* devanagari */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(/_next/static/media/29a4aea02fdee119-s.woff2) format('woff2');
  unicode-range: U+0900-097F, U+1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8FF, U+11B00-11B09;
}
/* latin-ext */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(/_next/static/media/a1386beebedccca4-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(/_next/static/media/b957ea75a84b6ea7-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Poppins Fallback';src: local("Arial");ascent-override: 93.62%;descent-override: 31.21%;line-gap-override: 8.92%;size-adjust: 112.16%
}.__className_44151c {font-family: 'Poppins', 'Poppins Fallback';font-style: normal
}.__variable_44151c {--font-poppins: 'Poppins', 'Poppins Fallback'
}

/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[2].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[2].use[2]!./node_modules/next/font/google/target.css?{"path":"app\\layout.tsx","import":"Inter","arguments":[{"subsets":["latin"],"weight":["400","500"],"variable":"--font-inter","display":"swap"}],"variableName":"inter"} ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/* cyrillic-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/55c55f0601d81cf3-s.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/26a46d62cd723877-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/97e0cb1ae144a2a9-s.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/581909926a08bbc8-s.woff2) format('woff2');
  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/df0a9ae256c0569c-s.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/8e9860b6e62d6359-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/e4af272ccee01ff0-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
/* cyrillic-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/55c55f0601d81cf3-s.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/26a46d62cd723877-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/97e0cb1ae144a2a9-s.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/581909926a08bbc8-s.woff2) format('woff2');
  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/df0a9ae256c0569c-s.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/8e9860b6e62d6359-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(/_next/static/media/e4af272ccee01ff0-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Inter Fallback';src: local("Arial");ascent-override: 90.44%;descent-override: 22.52%;line-gap-override: 0.00%;size-adjust: 107.12%
}.__className_fb114f {font-family: 'Inter', 'Inter Fallback';font-style: normal
}.__variable_fb114f {--font-inter: 'Inter', 'Inter Fallback'
}

